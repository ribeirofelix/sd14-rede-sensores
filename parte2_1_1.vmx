159 600 608 746 746 746 3 3 0 24
00 | 0000 0 track:0
00 | 0001 0
00 | 0002 0
00 | 0003 0
00 | 0004 0 track:1
00 | 0005 0
00 | 0006 0
00 | 0007 0
00 | 0008 0 track:2
00 | 0009 0
00 | 0010 0
00 | 0011 0
00 | 0012 0 track:3
00 | 0013 0
00 | 0014 0
00 | 0015 0
00 | 0016 0000 wClock:0
00 | 0017 0001
00 | 0018 0002
00 | 0019 0003
00 | 0020 0004
00 | 0021 0005
00 | 0022 0006
00 | 0023 0007
00 | 0024 0008 wClock:1
00 | 0025 0009
00 | 0026 0010
00 | 0027 0011
00 | 0028 0012
00 | 0029 0013
00 | 0030 0014
00 | 0031 0015
00 | 0032 0016 wClock:2
00 | 0033 0017
00 | 0034 0018
00 | 0035 0019
00 | 0036 0020
00 | 0037 0021
00 | 0038 0022
00 | 0039 0023
00 | 0040 0024 TEMP gate(s) = 0
00 | 0041 0025 PHOTO gate(s) = 1
00 | 0042 0026
00 | 0043 0027
00 | 0044 0028 VOLTS gate(s) = 0
00 | 0045 0029 SEND_DONE gate(s) = 1
00 | 0046 0030
00 | 0047 0031
00 | 0048 0032 SEND_DONE_ACK gate(s) = 1
00 | 0049 0033
00 | 0050 0034
00 | 0051 0035 RECEIVE gate(s) = 1
00 | 0052 0036
00 | 0053 0037
00 | 0054 0038 Q_READY gate(s) = 1
00 | 0055 0039
00 | 0056 0040
00 | 0057 0041 PORT_A gate(s) = 0
00 | 0058 0042 PORT_B gate(s) = 0
00 | 0059 0043 INT_A gate(s) = 0
00 | 0060 0044 INT_B gate(s) = 0
00 | 0061 0045 CUSTOM_A gate(s) = 1
00 | 0062 0046
00 | 0063 0047
00 | 0064 0048 $ret
00 | 0065 0049 
00 | 0066 0050 nodeId
00 | 0067 0051 
00 | 0068 0052 lastReq
00 | 0069 0053 pai1
00 | 0070 0054 pai2
00 | 0071 0055 acumulador1
00 | 0072 0056 acumulador2
00 | 0073 0057 msgRadio2_id
00 | 0074 0058 msgRadio2_source
00 | 0075 0059 
00 | 0076 0060 msgRadio2_target
00 | 0077 0061 
00 | 0078 0062 msgRadio2_d8_1
00 | 0079 0063 msgRadio2_d8_2
00 | 0080 0064 msgRadio2_d8_3
00 | 0081 0065 msgRadio2_d8_4
00 | 0082 0066 msgRadio2_d16_1
00 | 0083 0067 
00 | 0084 0068 msgRadio2_d16_2
00 | 0085 0069 
00 | 0086 0070 msgRadio2_d16_3
00 | 0087 0071 
00 | 0088 0072 msgRadio2_d16_4
00 | 0089 0073 
00 | 0090 0074 msgRadio2_d32_1
00 | 0091 0075 
00 | 0092 0076 
00 | 0093 0077 
00 | 0094 0078 msgRadio2_d32_2
00 | 0095 0079 
00 | 0096 0080 
00 | 0097 0081 
00 | 0098 0082 msgRadio2
00 | 0099 0083 
00 | 0100 0084 msgRadio4_id
00 | 0101 0085 msgRadio4_source
00 | 0102 0086 
00 | 0103 0087 msgRadio4_target
00 | 0104 0088 
00 | 0105 0089 msgRadio4_d8_1
00 | 0106 0090 msgRadio4_d8_2
00 | 0107 0091 msgRadio4_d8_3
00 | 0108 0092 msgRadio4_d8_4
00 | 0109 0093 msgRadio4_d16_1
00 | 0110 0094 
00 | 0111 0095 msgRadio4_d16_2
00 | 0112 0096 
00 | 0113 0097 msgRadio4_d16_3
00 | 0114 0098 
00 | 0115 0099 msgRadio4_d16_4
00 | 0116 0100 
00 | 0117 0101 msgRadio4_d32_1
00 | 0118 0102 
00 | 0119 0103 
00 | 0120 0104 
00 | 0121 0105 msgRadio4_d32_2
00 | 0122 0106 
00 | 0123 0107 
00 | 0124 0108 
00 | 0125 0109 msgRadio4
00 | 0126 0110 
00 | 0127 0111 x
00 | 0128 0112 msgRadio4_id
00 | 0129 0113 msgRadio4_source
00 | 0130 0114 
00 | 0131 0115 msgRadio4_target
00 | 0132 0116 
00 | 0133 0117 msgRadio4_d8_1
00 | 0134 0118 msgRadio4_d8_2
00 | 0135 0119 msgRadio4_d8_3
00 | 0136 0120 msgRadio4_d8_4
00 | 0137 0121 msgRadio4_d16_1
00 | 0138 0122 
00 | 0139 0123 msgRadio4_d16_2
00 | 0140 0124 
00 | 0141 0125 msgRadio4_d16_3
00 | 0142 0126 
00 | 0143 0127 msgRadio4_d16_4
00 | 0144 0128 
00 | 0145 0129 msgRadio4_d32_1
00 | 0146 0130 
00 | 0147 0131 
00 | 0148 0132 
00 | 0149 0133 msgRadio4_d32_2
00 | 0150 0134 
00 | 0151 0135 
00 | 0152 0136 
00 | 0153 0137 msgRadio4
00 | 0154 0138 
00 | 0155 0139 size
00 | 0156 0140 size_t
00 | 0157 0141 
00 | 0158 0142 try
68 | 0159 68 memclr 0 48                   | clear all gates
00 | 0160 00 
30 | 0161 30 
a0 | 0162 a0 set_c u8 25 1                 | config gate PHOTO with 1 await(s)
19 | 0163 19 
01 | 0164 01 
a0 | 0165 a0 set_c u8 29 1                 | config gate SEND_DONE with 1 await(s)
1d | 0166 1d 
01 | 0167 01 
a0 | 0168 a0 set_c u8 32 1                 | config gate SEND_DONE_ACK with 1 await(s)
20 | 0169 20 
01 | 0170 01 
a0 | 0171 a0 set_c u8 35 1                 | config gate RECEIVE with 1 await(s)
23 | 0172 23 
01 | 0173 01 
a0 | 0174 a0 set_c u8 38 1                 | config gate Q_READY with 1 await(s)
26 | 0175 26 
01 | 0176 01 
a0 | 0177 a0 set_c u8 45 1                 | config gate CUSTOM_A with 1 await(s)
2d | 0178 2d 
01 | 0179 01 
91 | 0180 91 outevtx_v 0 2 u16 50          | emit INIT len=2 var=nodeId
00 | 0181 00 
02 | 0182 02 
32 | 0183 32 
a0 | 0184 a0 set_c u8 52 0                 | lastReq = 0
34 | 0185 34 
00 | 0186 00 
a0 | 0187 a0 set_c u8 53 0                 | pai1 = 0
35 | 0188 35 
00 | 0189 00 
a0 | 0190 a0 set_c u8 54 0                 | pai2 = 0
36 | 0191 36 
00 | 0192 00 
a0 | 0193 a0 set_c u8 55 0                 | acumulador1 = 0
37 | 0194 37 
00 | 0195 00 
a0 | 0196 a0 set_c u8 56 0                 | acumulador2 = 0
38 | 0197 38 
00 | 0198 00 
e0 | 0199 e0 tkins_max 0 13                | insert track ParEver_sub_1_13
0d | 0200 0d 
e0 | 0201 e0 tkins_max 0 14                | insert track ParEver_sub_2_14
0e | 0202 0e 
01 | 0203 01 end                           | end
1c | 0204 1c push_c 11                     | push 11
0b | 0205 0b 
2d | 0206 2d pushx_vu u16 50               | push nodeId:u16
32 | 0207 32 
0d | 0208 0d eq                            | eq
80 | 0209 80 ifelse 126 127                | ifelse True_126 False_127
7e | 0210 7e 
7f | 0211 7f 
a0 | 0212 a0 set_c u8 57 1                 | msgRadio1_id = 1
39 | 0213 39 
01 | 0214 01 
1c | 0215 1c push_c 57                     | push &msgRadio1_id
39 | 0216 39 
55 | 0217 55 popx_u u16 82                 | pop *msgRadio1
52 | 0218 52 
a0 | 0219 a0 set_c u8 84 1                 | msgRadio2_id = 1
54 | 0220 54 
01 | 0221 01 
1c | 0222 1c push_c 84                     | push &msgRadio2_id
54 | 0223 54 
55 | 0224 55 popx_u u16 109                | pop *msgRadio2
6d | 0225 6d 
b4 | 0226 b4 set_v u16 58 50               | msgRadio1_source=nodeId
3a | 0227 3a 
32 | 0228 32 
a4 | 0229 a4 set_c u16 60 0xffff           | msgRadio1_target = 0xffff
3c | 0230 3c 
ff | 0231 ff 
ff | 0232 ff 
a0 | 0233 a0 set_c u8 62 0                 | msgRadio1_d8_1 = 0
3e | 0234 3e 
00 | 0235 00 
1c | 0236 1c push_c 1                      | push 1
01 | 0237 01 
2c | 0238 2c pushx_vu u8 52                | push lastReq:u8
34 | 0239 34 
04 | 0240 04 add                           | add
54 | 0241 54 popx_u u8 52                  | pop lastReq
34 | 0242 34 
b0 | 0243 b0 set_v u8 57 52                | msgRadio1_id=lastReq
39 | 0244 39 
34 | 0245 34 
90 | 0246 90 outevtx_v 19 25 _msgRadio1_t* 82  | emit Q_PUT len=25 var=msgRadio1
13 | 0247 13 
19 | 0248 19 
52 | 0249 52 
8c | 0250 8c outevtx_c 2 1 3               | emit LED0 len=1 const=3
02 | 0251 02 
01 | 0252 01 
03 | 0253 03 
a0 | 0254 a0 set_c u8 55 0                 | acumulador1 = 0
37 | 0255 37 
00 | 0256 00 
a0 | 0257 a0 set_c u8 56 0                 | acumulador2 = 0
38 | 0258 38 
00 | 0259 00 
c1 | 0260 c1 clken_c 0 30000 43            | clock enable Awake_30000000_43 30000msec
00 | 0261 00 
75 | 0262 75 
30 | 0263 30 
2b | 0264 2b 
01 | 0265 01 end                           | end
7c | 0266 7c exec 25                       | goto u8 25
19 | 0267 19 
68 | 0268 68 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 0269 00 
08 | 0270 08 
7c | 0271 7c exec 128                      | goto u8 128
80 | 0272 80 
a0 | 0273 a0 set_c u8 57 1                 | msgRadio2_id = 1
39 | 0274 39 
01 | 0275 01 
1c | 0276 1c push_c 57                     | push &msgRadio2_id
39 | 0277 39 
55 | 0278 55 popx_u u16 82                 | pop *msgRadio2
52 | 0279 52 
e0 | 0280 e0 tkins_max 0 47                | insert track ParEver_sub_1_47
2f | 0281 2f 
e0 | 0282 e0 tkins_max 0 48                | insert track ParEver_sub_2_48
30 | 0283 30 
01 | 0284 01 end                           | end
a5 | 0285 a5 set_c u16 36 56               | await RECEIVE[0]
24 | 0286 24 
38 | 0287 38 
01 | 0288 01 end                           | end
6c | 0289 6c getextdt_p 82 25              | get Ext Data *msgRadio2 25
52 | 0290 52 
19 | 0291 19 
8c | 0292 8c outevtx_c 4 1 3               | emit LED2 len=1 const=3
04 | 0293 04 
01 | 0294 01 
03 | 0295 03 
1c | 0296 1c push_c 0                      | push 0
00 | 0297 00 
2c | 0298 2c pushx_vu u8 62                | push msgRadio2_d8_1:u8
3e | 0299 3e 
0d | 0300 0d eq                            | eq
80 | 0301 80 ifelse 95 96                  | ifelse True_95 False_96
5f | 0302 5f 
60 | 0303 60 
1c | 0304 1c push_c 0                      | push 0
00 | 0305 00 
2c | 0306 2c pushx_vu u8 53                | push pai1:u8
35 | 0307 35 
0d | 0308 0d eq                            | eq
80 | 0309 80 ifelse 68 69                  | ifelse True_68 False_69
44 | 0310 44 
45 | 0311 45 
2d | 0312 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0313 3a 
54 | 0314 54 popx_u u8 53                  | pop pai1
35 | 0315 35 
7c | 0316 7c exec 70                       | goto u8 70
46 | 0317 46 
1c | 0318 1c push_c 0                      | push 0
00 | 0319 00 
2c | 0320 2c pushx_vu u8 54                | push pai2:u8
36 | 0321 36 
0d | 0322 0d eq                            | eq
80 | 0323 80 ifelse 66 67                  | ifelse True_66 EndIf_67
42 | 0324 42 
43 | 0325 43 
2d | 0326 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0327 3a 
54 | 0328 54 popx_u u8 54                  | pop pai2
36 | 0329 36 
7c | 0330 7c exec 67                       | goto u8 67
43 | 0331 43 
7c | 0332 7c exec 70                       | goto u8 70
46 | 0333 46 
2c | 0334 2c pushx_vu u8 52                | push lastReq:u8
34 | 0335 34 
2c | 0336 2c pushx_vu u8 57                | push msgRadio2_id:u8
39 | 0337 39 
11 | 0338 11 gt                            | gt
2c | 0339 2c pushx_vu u8 54                | push pai2:u8
36 | 0340 36 
2d | 0341 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0342 3a 
0d | 0343 0d eq                            | eq
14 | 0344 14 land                          | land
2c | 0345 2c pushx_vu u8 53                | push pai1:u8
35 | 0346 35 
2d | 0347 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0348 3a 
0d | 0349 0d eq                            | eq
13 | 0350 13 lor                           | lor
80 | 0351 80 ifelse 88 89                  | ifelse True_88 EndIf_89
58 | 0352 58 
59 | 0353 59 
b0 | 0354 b0 set_v u8 52 57                | lastReq=msgRadio2_id
34 | 0355 34 
39 | 0356 39 
b4 | 0357 b4 set_v u16 58 50               | msgRadio2_source=nodeId
3a | 0358 3a 
32 | 0359 32 
90 | 0360 90 outevtx_v 19 25 _msgRadio2_t* 82  | emit Q_PUT len=25 var=msgRadio2
13 | 0361 13 
19 | 0362 19 
52 | 0363 52 
8c | 0364 8c outevtx_c 2 1 3               | emit LED0 len=1 const=3
02 | 0365 02 
01 | 0366 01 
03 | 0367 03 
8c | 0368 8c outevtx_c 18 1 1              | emit REQ_CUSTOM_A len=1 const=1
12 | 0369 12 
01 | 0370 01 
01 | 0371 01 
7c | 0372 7c exec 89                       | goto u8 89
59 | 0373 59 
7c | 0374 7c exec 97                       | goto u8 97
61 | 0375 61 
2c | 0376 2c pushx_vu u8 53                | push pai1:u8
35 | 0377 35 
55 | 0378 55 popx_u u16 60                 | pop msgRadio2_target
3c | 0379 3c 
90 | 0380 90 outevtx_v 19 25 _msgRadio2_t* 82  | emit Q_PUT len=25 var=msgRadio2
13 | 0381 13 
19 | 0382 19 
52 | 0383 52 
7c | 0384 7c exec 97                       | goto u8 97
61 | 0385 61 
7c | 0386 7c exec 52                       | goto u8 52
34 | 0387 34 
68 | 0388 68 memclr 36 2                   | clear EXT gates for RECEIVE
24 | 0389 24 
02 | 0390 02 
01 | 0391 01 end                           | end
a5 | 0392 a5 set_c u16 46 101              | await CUSTOM_A[0]
2e | 0393 2e 
65 | 0394 65 
01 | 0395 01 end                           | end
c1 | 0396 c1 clken_c 1 10000 102           | clock enable Awake_10000000_102 10000msec
01 | 0397 01 
27 | 0398 27 
10 | 0399 10 
66 | 0400 66 
01 | 0401 01 end                           | end
2c | 0402 2c pushx_vu u8 54                | push pai2:u8
36 | 0403 36 
2d | 0404 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0405 3a 
0d | 0406 0d eq                            | eq
2c | 0407 2c pushx_vu u8 53                | push pai1:u8
35 | 0408 35 
2d | 0409 2d pushx_vu u16 58               | push msgRadio2_source:u16
3a | 0410 3a 
0d | 0411 0d eq                            | eq
13 | 0412 13 lor                           | lor
80 | 0413 80 ifelse 124 125                | ifelse True_124 EndIf_125
7c | 0414 7c 
7d | 0415 7d 
94 | 0416 94 outevt_z 6                    | emit REQ_PHOTO
06 | 0417 06 
a0 | 0418 a0 set_c u8 84 1                 | msgRadio4_id = 1
54 | 0419 54 
01 | 0420 01 
1c | 0421 1c push_c 84                     | push &msgRadio4_id
54 | 0422 54 
55 | 0423 55 popx_u u16 109                | pop *msgRadio4
6d | 0424 6d 
b0 | 0425 b0 set_v u8 84 52                | msgRadio4_id=lastReq
54 | 0426 54 
34 | 0427 34 
b4 | 0428 b4 set_v u16 85 50               | msgRadio4_source=nodeId
55 | 0429 55 
32 | 0430 32 
2c | 0431 2c pushx_vu u8 53                | push pai1:u8
35 | 0432 35 
55 | 0433 55 popx_u u16 87                 | pop msgRadio4_target
57 | 0434 57 
a0 | 0435 a0 set_c u8 89 1                 | msgRadio4_d8_1 = 1
59 | 0436 59 
01 | 0437 01 
a5 | 0438 a5 set_c u16 26 120              | await PHOTO[0]
1a | 0439 1a 
78 | 0440 78 
01 | 0441 01 end                           | end
70 | 0442 70 getextdt_v 91 1               | get Ext Data msgRadio4_d8_3 1
5b | 0443 5b 
01 | 0444 01 
90 | 0445 90 outevtx_v 19 25 _msgRadio4_t* 109  | emit Q_PUT len=25 var=msgRadio4
13 | 0446 13 
19 | 0447 19 
6d | 0448 6d 
7c | 0449 7c exec 125                      | goto u8 125
7d | 0450 7d 
7c | 0451 7c exec 98                       | goto u8 98
62 | 0452 62 
68 | 0453 68 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 0454 08 
08 | 0455 08 
68 | 0456 68 memclr 26 2                   | clear EXT gates for PHOTO
1a | 0457 1a 
02 | 0458 02 
68 | 0459 68 memclr 46 2                   | clear EXT gates for CUSTOM_A
2e | 0460 2e 
02 | 0461 02 
01 | 0462 01 end                           | end
7c | 0463 7c exec 128                      | goto u8 128
80 | 0464 80 
01 | 0465 01 end                           | end
a0 | 0466 a0 set_c u8 112 1                | msgRadio4_id = 1
70 | 0467 70 
01 | 0468 01 
1c | 0469 1c push_c 112                    | push &msgRadio4_id
70 | 0470 70 
55 | 0471 55 popx_u u16 137                | pop *msgRadio4
89 | 0472 89 
1c | 0473 1c push_c 139                    | push &size
8b | 0474 8b 
55 | 0475 55 popx_u u16 140                | pop *size_t
8c | 0476 8c 
a5 | 0477 a5 set_c u16 39 137              | await Q_READY[0]
27 | 0478 27 
89 | 0479 89 
01 | 0480 01 end                           | end
90 | 0481 90 outevtx_v 21 1 u8* 140        | emit Q_SIZE len=1 var=size_t
15 | 0482 15 
01 | 0483 01 
8c | 0484 8c 
1c | 0485 1c push_c 0                      | push 0
00 | 0486 00 
2c | 0487 2c pushx_vu u8 139               | push size:u8
8b | 0488 8b 
0d | 0489 0d eq                            | eq
80 | 0490 80 ifelse 145 146                | ifelse True_145 EndIf_146
91 | 0491 91 
92 | 0492 92 
f1 | 0493 f1 tkins_z 1 9 140               | insert track Loop_out_140
09 | 0494 09 
8c | 0495 8c 
01 | 0496 01 end                           | end
7c | 0497 7c exec 146                      | goto u8 146
92 | 0498 92 
90 | 0499 90 outevtx_v 20 25 _msgRadio4_t* 137  | emit Q_GET len=25 var=msgRadio4
14 | 0500 14 
19 | 0501 19 
89 | 0502 89 
1d | 0503 1d push_c 0xffff                 | push 0xffff
ff | 0504 ff 
ff | 0505 ff 
2d | 0506 2d pushx_vu u16 115              | push msgRadio4_target:u16
73 | 0507 73 
0d | 0508 0d eq                            | eq
80 | 0509 80 ifelse 170 171                | ifelse True_170 False_171
aa | 0510 aa 
ab | 0511 ab 
90 | 0512 90 outevtx_v 8 25 _msgRadio4_t* 137  | emit SEND len=25 var=msgRadio4
08 | 0513 08 
19 | 0514 19 
89 | 0515 89 
a5 | 0516 a5 set_c u16 30 154              | await SEND_DONE[0]
1e | 0517 1e 
9a | 0518 9a 
01 | 0519 01 end                           | end
7c | 0520 7c exec 172                      | goto u8 172
ac | 0521 ac 
a0 | 0522 a0 set_c u8 142 0                | try = 0
8e | 0523 8e 
00 | 0524 00 
90 | 0525 90 outevtx_v 9 25 _msgRadio4_t* 137  | emit SEND_ACK len=25 var=msgRadio4
09 | 0526 09 
19 | 0527 19 
89 | 0528 89 
a5 | 0529 a5 set_c u16 33 163              | await SEND_DONE_ACK[0]
21 | 0530 21 
a3 | 0531 a3 
01 | 0532 01 end                           | end
70 | 0533 70 getextdt_v 111 1              | get Ext Data x 1
6f | 0534 6f 
01 | 0535 01 
2c | 0536 2c pushx_vu u8 111               | push x:u8
6f | 0537 6f 
80 | 0538 80 ifelse 167 168                | ifelse True_167 False_168
a7 | 0539 a7 
a8 | 0540 a8 
f1 | 0541 f1 tkins_z 1 14 158              | insert track Loop_out_158
0e | 0542 0e 
9e | 0543 9e 
01 | 0544 01 end                           | end
7c | 0545 7c exec 169                      | goto u8 169
a9 | 0546 a9 
1c | 0547 1c push_c 1                      | push 1
01 | 0548 01 
2c | 0549 2c pushx_vu u8 142               | push try:u8
8e | 0550 8e 
04 | 0551 04 add                           | add
54 | 0552 54 popx_u u8 142                 | pop try
8e | 0553 8e 
7c | 0554 7c exec 169                      | goto u8 169
a9 | 0555 a9 
7c | 0556 7c exec 156                      | goto u8 156
9c | 0557 9c 
68 | 0558 68 memclr 33 2                   | clear EXT gates for SEND_DONE_ACK
21 | 0559 21 
02 | 0560 02 
7c | 0561 7c exec 172                      | goto u8 172
ac | 0562 ac 
c0 | 0563 c0 clken_c 2 50 173              | clock enable Awake_50000_173 50msec
02 | 0564 02 
32 | 0565 32 
ad | 0566 ad 
01 | 0567 01 end                           | end
7c | 0568 7c exec 138                      | goto u8 138
8a | 0569 8a 
68 | 0570 68 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 0571 10 
08 | 0572 08 
68 | 0573 68 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 0574 1e 
02 | 0575 02 
68 | 0576 68 memclr 33 2                   | clear EXT gates for SEND_DONE_ACK
21 | 0577 21 
02 | 0578 02 
7c | 0579 7c exec 134                      | goto u8 134
86 | 0580 86 
68 | 0581 68 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 0582 10 
08 | 0583 08 
68 | 0584 68 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 0585 1e 
02 | 0586 02 
68 | 0587 68 memclr 33 2                   | clear EXT gates for SEND_DONE_ACK
21 | 0588 21 
02 | 0589 02 
68 | 0590 68 memclr 39 2                   | clear EXT gates for Q_READY
27 | 0591 27 
02 | 0592 02 
01 | 0593 01 end                           | end
01 | 0594 01 end                           | end
68 | 0595 68 memclr 0 24                   | clear WClocks gates from 0 to 3
00 | 0596 00 
18 | 0597 18 
02 | 0598 02 return                        | return
01 | 0599 01 end                           | end
01 | 0600 01 L1(0x01) => 159 (0x9f)
9f | 0601 9f 
7e | 0602 7e L126(0x7e) => 212 (0xd4)
d4 | 0603 d4 
19 | 0604 19 L25(0x19) => 226 (0xe2)
e2 | 0605 e2 
0d | 0606 0d L13(0x0d) => 204 (0xcc)
cc | 0607 cc 
1b | 0608 1b L27(0x1b) => 268 (0x010c)
01 | 0609 01 
0c | 0610 0c 
03 | 0611 03 L3(0x03) => 595 (0x0253)
02 | 0612 02 
53 | 0613 53 
36 | 0614 36 L54(0x36) => 388 (0x0184)
01 | 0615 01 
84 | 0616 84 
7c | 0617 7c L124(0x7c) => 416 (0x01a0)
01 | 0618 01 
a0 | 0619 a0 
2f | 0620 2f L47(0x2f) => 285 (0x011d)
01 | 0621 01 
1d | 0622 1d 
0e | 0623 0e L14(0x0e) => 466 (0x01d2)
01 | 0624 01 
d2 | 0625 d2 
7d | 0626 7d L125(0x7d) => 451 (0x01c3)
01 | 0627 01 
c3 | 0628 c3 
9a | 0629 9a L154(0x9a) => 520 (0x0208)
02 | 0630 02 
08 | 0631 08 
9c | 0632 9c L156(0x9c) => 525 (0x020d)
02 | 0633 02 
0d | 0634 0d 
30 | 0635 30 L48(0x30) => 392 (0x0188)
01 | 0636 01 
88 | 0637 88 
38 | 0638 38 L56(0x38) => 289 (0x0121)
01 | 0639 01 
21 | 0640 21 
7f | 0641 7f L127(0x7f) => 273 (0x0111)
01 | 0642 01 
11 | 0643 11 
9e | 0644 9e L158(0x9e) => 558 (0x022e)
02 | 0645 02 
2e | 0646 2e 
60 | 0647 60 L96(0x60) => 376 (0x0178)
01 | 0648 01 
78 | 0649 78 
80 | 0650 80 L128(0x80) => 465 (0x01d1)
01 | 0651 01 
d1 | 0652 d1 
61 | 0653 61 L97(0x61) => 386 (0x0182)
01 | 0654 01 
82 | 0655 82 
42 | 0656 42 L66(0x42) => 326 (0x0146)
01 | 0657 01 
46 | 0658 46 
a3 | 0659 a3 L163(0xa3) => 533 (0x0215)
02 | 0660 02 
15 | 0661 15 
43 | 0662 43 L67(0x43) => 332 (0x014c)
01 | 0663 01 
4c | 0664 4c 
88 | 0665 88 L136(0x88) => 581 (0x0245)
02 | 0666 02 
45 | 0667 45 
44 | 0668 44 L68(0x44) => 312 (0x0138)
01 | 0669 01 
38 | 0670 38 
a8 | 0671 a8 L168(0xa8) => 547 (0x0223)
02 | 0672 02 
23 | 0673 23 
64 | 0674 64 L100(0x64) => 453 (0x01c5)
01 | 0675 01 
c5 | 0676 c5 
a7 | 0677 a7 L167(0xa7) => 541 (0x021d)
02 | 0678 02 
1d | 0679 1d 
45 | 0680 45 L69(0x45) => 318 (0x013e)
01 | 0681 01 
3e | 0682 3e 
2b | 0683 2b L43(0x2b) => 266 (0x010a)
01 | 0684 01 
0a | 0685 0a 
a9 | 0686 a9 L169(0xa9) => 556 (0x022c)
02 | 0687 02 
2c | 0688 2c 
46 | 0689 46 L70(0x46) => 334 (0x014e)
01 | 0690 01 
4e | 0691 4e 
aa | 0692 aa L170(0xaa) => 512 (0x0200)
02 | 0693 02 
00 | 0694 00 
66 | 0695 66 L102(0x66) => 402 (0x0192)
01 | 0696 01 
92 | 0697 92 
ab | 0698 ab L171(0xab) => 522 (0x020a)
02 | 0699 02 
0a | 0700 0a 
8c | 0701 8c L140(0x8c) => 570 (0x023a)
02 | 0702 02 
3a | 0703 3a 
ac | 0704 ac L172(0xac) => 563 (0x0233)
02 | 0705 02 
33 | 0706 33 
34 | 0707 34 L52(0x34) => 285 (0x011d)
01 | 0708 01 
1d | 0709 1d 
ad | 0710 ad L173(0xad) => 568 (0x0238)
02 | 0711 02 
38 | 0712 38 
65 | 0713 65 L101(0x65) => 396 (0x018c)
01 | 0714 01 
8c | 0715 8c 
58 | 0716 58 L88(0x58) => 354 (0x0162)
01 | 0717 01 
62 | 0718 62 
86 | 0719 86 L134(0x86) => 477 (0x01dd)
01 | 0720 01 
dd | 0721 dd 
78 | 0722 78 L120(0x78) => 442 (0x01ba)
01 | 0723 01 
ba | 0724 ba 
8a | 0725 8a L138(0x8a) => 481 (0x01e1)
01 | 0726 01 
e1 | 0727 e1 
59 | 0728 59 L89(0x59) => 374 (0x0176)
01 | 0729 01 
76 | 0730 76 
91 | 0731 91 L145(0x91) => 493 (0x01ed)
01 | 0732 01 
ed | 0733 ed 
5f | 0734 5f L95(0x5f) => 304 (0x0130)
01 | 0735 01 
30 | 0736 30 
92 | 0737 92 L146(0x92) => 499 (0x01f3)
01 | 0738 01 
f3 | 0739 f3 
62 | 0740 62 L98(0x62) => 392 (0x0188)
01 | 0741 01 
88 | 0742 88 
89 | 0743 89 L137(0x89) => 481 (0x01e1)
01 | 0744 01 
e1 | 0745 e1 
