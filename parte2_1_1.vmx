171 618 626 770 770 770 4 4 0 32
00 | 0000 0 track:0
00 | 0001 0
00 | 0002 0
00 | 0003 0
00 | 0004 0 track:1
00 | 0005 0
00 | 0006 0
00 | 0007 0
00 | 0008 0 track:2
00 | 0009 0
00 | 0010 0
00 | 0011 0
00 | 0012 0 track:3
00 | 0013 0
00 | 0014 0
00 | 0015 0
00 | 0016 0 track:4
00 | 0017 0
00 | 0018 0
00 | 0019 0
00 | 0020 0000 wClock:0
00 | 0021 0001
00 | 0022 0002
00 | 0023 0003
00 | 0024 0004
00 | 0025 0005
00 | 0026 0006
00 | 0027 0007
00 | 0028 0008 wClock:1
00 | 0029 0009
00 | 0030 0010
00 | 0031 0011
00 | 0032 0012
00 | 0033 0013
00 | 0034 0014
00 | 0035 0015
00 | 0036 0016 wClock:2
00 | 0037 0017
00 | 0038 0018
00 | 0039 0019
00 | 0040 0020
00 | 0041 0021
00 | 0042 0022
00 | 0043 0023
00 | 0044 0024 wClock:3
00 | 0045 0025
00 | 0046 0026
00 | 0047 0027
00 | 0048 0028
00 | 0049 0029
00 | 0050 0030
00 | 0051 0031
00 | 0052 0032 TEMP gate(s) = 0
00 | 0053 0033 PHOTO gate(s) = 1
00 | 0054 0034
00 | 0055 0035
00 | 0056 0036 VOLTS gate(s) = 0
00 | 0057 0037 SEND_DONE gate(s) = 1
00 | 0058 0038
00 | 0059 0039
00 | 0060 0040 SEND_DONE_ACK gate(s) = 1
00 | 0061 0041
00 | 0062 0042
00 | 0063 0043 RECEIVE gate(s) = 1
00 | 0064 0044
00 | 0065 0045
00 | 0066 0046 Q_READY gate(s) = 1
00 | 0067 0047
00 | 0068 0048
00 | 0069 0049 PORT_A gate(s) = 0
00 | 0070 0050 PORT_B gate(s) = 0
00 | 0071 0051 INT_A gate(s) = 0
00 | 0072 0052 INT_B gate(s) = 0
00 | 0073 0053 CUSTOM_A gate(s) = 1
00 | 0074 0054
00 | 0075 0055
00 | 0076 0056 $ret
00 | 0077 0057 
00 | 0078 0058 nodeId
00 | 0079 0059 
00 | 0080 0060 lastReq
00 | 0081 0061 pai1
00 | 0082 0062 pai2
00 | 0083 0063 acumulador1
00 | 0084 0064 acumulador2
00 | 0085 0065 msgRadio2_id
00 | 0086 0066 msgRadio2_source
00 | 0087 0067 
00 | 0088 0068 msgRadio2_target
00 | 0089 0069 
00 | 0090 0070 msgRadio2_d8_1
00 | 0091 0071 msgRadio2_d8_2
00 | 0092 0072 msgRadio2_d8_3
00 | 0093 0073 msgRadio2_d8_4
00 | 0094 0074 msgRadio2_d16_1
00 | 0095 0075 
00 | 0096 0076 msgRadio2_d16_2
00 | 0097 0077 
00 | 0098 0078 msgRadio2_d16_3
00 | 0099 0079 
00 | 0100 0080 msgRadio2_d16_4
00 | 0101 0081 
00 | 0102 0082 msgRadio2_d32_1
00 | 0103 0083 
00 | 0104 0084 
00 | 0105 0085 
00 | 0106 0086 msgRadio2_d32_2
00 | 0107 0087 
00 | 0108 0088 
00 | 0109 0089 
00 | 0110 0090 msgRadio2
00 | 0111 0091 
00 | 0112 0092 msgRadio4_id
00 | 0113 0093 msgRadio4_source
00 | 0114 0094 
00 | 0115 0095 msgRadio4_target
00 | 0116 0096 
00 | 0117 0097 msgRadio4_d8_1
00 | 0118 0098 msgRadio4_d8_2
00 | 0119 0099 msgRadio4_d8_3
00 | 0120 0100 msgRadio4_d8_4
00 | 0121 0101 msgRadio4_d16_1
00 | 0122 0102 
00 | 0123 0103 msgRadio4_d16_2
00 | 0124 0104 
00 | 0125 0105 msgRadio4_d16_3
00 | 0126 0106 
00 | 0127 0107 msgRadio4_d16_4
00 | 0128 0108 
00 | 0129 0109 msgRadio4_d32_1
00 | 0130 0110 
00 | 0131 0111 
00 | 0132 0112 
00 | 0133 0113 msgRadio4_d32_2
00 | 0134 0114 
00 | 0135 0115 
00 | 0136 0116 
00 | 0137 0117 msgRadio4
00 | 0138 0118 
00 | 0139 0119 x
00 | 0140 0120 msgRadio4_id
00 | 0141 0121 msgRadio4_source
00 | 0142 0122 
00 | 0143 0123 msgRadio4_target
00 | 0144 0124 
00 | 0145 0125 msgRadio4_d8_1
00 | 0146 0126 msgRadio4_d8_2
00 | 0147 0127 msgRadio4_d8_3
00 | 0148 0128 msgRadio4_d8_4
00 | 0149 0129 msgRadio4_d16_1
00 | 0150 0130 
00 | 0151 0131 msgRadio4_d16_2
00 | 0152 0132 
00 | 0153 0133 msgRadio4_d16_3
00 | 0154 0134 
00 | 0155 0135 msgRadio4_d16_4
00 | 0156 0136 
00 | 0157 0137 msgRadio4_d32_1
00 | 0158 0138 
00 | 0159 0139 
00 | 0160 0140 
00 | 0161 0141 msgRadio4_d32_2
00 | 0162 0142 
00 | 0163 0143 
00 | 0164 0144 
00 | 0165 0145 msgRadio4
00 | 0166 0146 
00 | 0167 0147 size
00 | 0168 0148 size_t
00 | 0169 0149 
00 | 0170 0150 try
68 | 0171 68 memclr 0 56                   | clear all gates
00 | 0172 00 
38 | 0173 38 
a0 | 0174 a0 set_c u8 33 1                 | config gate PHOTO with 1 await(s)
21 | 0175 21 
01 | 0176 01 
a0 | 0177 a0 set_c u8 37 1                 | config gate SEND_DONE with 1 await(s)
25 | 0178 25 
01 | 0179 01 
a0 | 0180 a0 set_c u8 40 1                 | config gate SEND_DONE_ACK with 1 await(s)
28 | 0181 28 
01 | 0182 01 
a0 | 0183 a0 set_c u8 43 1                 | config gate RECEIVE with 1 await(s)
2b | 0184 2b 
01 | 0185 01 
a0 | 0186 a0 set_c u8 46 1                 | config gate Q_READY with 1 await(s)
2e | 0187 2e 
01 | 0188 01 
a0 | 0189 a0 set_c u8 53 1                 | config gate CUSTOM_A with 1 await(s)
35 | 0190 35 
01 | 0191 01 
91 | 0192 91 outevtx_v 0 2 u16 58          | emit INIT len=2 var=nodeId
00 | 0193 00 
02 | 0194 02 
3a | 0195 3a 
a0 | 0196 a0 set_c u8 60 0                 | lastReq = 0
3c | 0197 3c 
00 | 0198 00 
a0 | 0199 a0 set_c u8 61 0                 | pai1 = 0
3d | 0200 3d 
00 | 0201 00 
a0 | 0202 a0 set_c u8 62 0                 | pai2 = 0
3e | 0203 3e 
00 | 0204 00 
a0 | 0205 a0 set_c u8 63 0                 | acumulador1 = 0
3f | 0206 3f 
00 | 0207 00 
a0 | 0208 a0 set_c u8 64 0                 | acumulador2 = 0
40 | 0209 40 
00 | 0210 00 
e0 | 0211 e0 tkins_max 0 13                | insert track ParEver_sub_1_13
0d | 0212 0d 
e0 | 0213 e0 tkins_max 0 14                | insert track ParEver_sub_2_14
0e | 0214 0e 
01 | 0215 01 end                           | end
1c | 0216 1c push_c 11                     | push 11
0b | 0217 0b 
2d | 0218 2d pushx_vu u16 58               | push nodeId:u16
3a | 0219 3a 
0d | 0220 0d eq                            | eq
80 | 0221 80 ifelse 125 126                | ifelse True_125 False_126
7d | 0222 7d 
7e | 0223 7e 
a0 | 0224 a0 set_c u8 65 1                 | msgRadio1_id = 1
41 | 0225 41 
01 | 0226 01 
1c | 0227 1c push_c 65                     | push &msgRadio1_id
41 | 0228 41 
55 | 0229 55 popx_u u16 90                 | pop *msgRadio1
5a | 0230 5a 
a0 | 0231 a0 set_c u8 92 1                 | msgRadio2_id = 1
5c | 0232 5c 
01 | 0233 01 
1c | 0234 1c push_c 92                     | push &msgRadio2_id
5c | 0235 5c 
55 | 0236 55 popx_u u16 117                | pop *msgRadio2
75 | 0237 75 
b4 | 0238 b4 set_v u16 66 58               | msgRadio1_source=nodeId
42 | 0239 42 
3a | 0240 3a 
a4 | 0241 a4 set_c u16 68 0xffff           | msgRadio1_target = 0xffff
44 | 0242 44 
ff | 0243 ff 
ff | 0244 ff 
a0 | 0245 a0 set_c u8 70 0                 | msgRadio1_d8_1 = 0
46 | 0246 46 
00 | 0247 00 
1c | 0248 1c push_c 1                      | push 1
01 | 0249 01 
2c | 0250 2c pushx_vu u8 60                | push lastReq:u8
3c | 0251 3c 
04 | 0252 04 add                           | add
54 | 0253 54 popx_u u8 60                  | pop lastReq
3c | 0254 3c 
b0 | 0255 b0 set_v u8 65 60                | msgRadio1_id=lastReq
41 | 0256 41 
3c | 0257 3c 
90 | 0258 90 outevtx_v 19 25 _msgRadio1_t* 90  | emit Q_PUT len=25 var=msgRadio1
13 | 0259 13 
19 | 0260 19 
5a | 0261 5a 
8c | 0262 8c outevtx_c 2 1 3               | emit LED0 len=1 const=3
02 | 0263 02 
01 | 0264 01 
03 | 0265 03 
a0 | 0266 a0 set_c u8 63 0                 | acumulador1 = 0
3f | 0267 3f 
00 | 0268 00 
a0 | 0269 a0 set_c u8 64 0                 | acumulador2 = 0
40 | 0270 40 
00 | 0271 00 
c1 | 0272 c1 clken_c 0 10000 43            | clock enable Awake_10000000_43 10000msec
00 | 0273 00 
27 | 0274 27 
10 | 0275 10 
2b | 0276 2b 
01 | 0277 01 end                           | end
7c | 0278 7c exec 25                       | goto u8 25
19 | 0279 19 
68 | 0280 68 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 0281 00 
08 | 0282 08 
7c | 0283 7c exec 127                      | goto u8 127
7f | 0284 7f 
a0 | 0285 a0 set_c u8 65 1                 | msgRadio2_id = 1
41 | 0286 41 
01 | 0287 01 
1c | 0288 1c push_c 65                     | push &msgRadio2_id
41 | 0289 41 
55 | 0290 55 popx_u u16 90                 | pop *msgRadio2
5a | 0291 5a 
e0 | 0292 e0 tkins_max 0 47                | insert track ParEver_sub_1_47
2f | 0293 2f 
e0 | 0294 e0 tkins_max 0 48                | insert track ParEver_sub_2_48
30 | 0295 30 
01 | 0296 01 end                           | end
a5 | 0297 a5 set_c u16 44 56               | await RECEIVE[0]
2c | 0298 2c 
38 | 0299 38 
01 | 0300 01 end                           | end
6c | 0301 6c getextdt_p 90 25              | get Ext Data *msgRadio2 25
5a | 0302 5a 
19 | 0303 19 
8c | 0304 8c outevtx_c 4 1 3               | emit LED2 len=1 const=3
04 | 0305 04 
01 | 0306 01 
03 | 0307 03 
1c | 0308 1c push_c 0                      | push 0
00 | 0309 00 
2c | 0310 2c pushx_vu u8 70                | push msgRadio2_d8_1:u8
46 | 0311 46 
0d | 0312 0d eq                            | eq
80 | 0313 80 ifelse 94 95                  | ifelse True_94 False_95
5e | 0314 5e 
5f | 0315 5f 
1c | 0316 1c push_c 0                      | push 0
00 | 0317 00 
2c | 0318 2c pushx_vu u8 61                | push pai1:u8
3d | 0319 3d 
0d | 0320 0d eq                            | eq
80 | 0321 80 ifelse 68 69                  | ifelse True_68 False_69
44 | 0322 44 
45 | 0323 45 
2d | 0324 2d pushx_vu u16 66               | push msgRadio2_source:u16
42 | 0325 42 
54 | 0326 54 popx_u u8 61                  | pop pai1
3d | 0327 3d 
7c | 0328 7c exec 70                       | goto u8 70
46 | 0329 46 
1c | 0330 1c push_c 0                      | push 0
00 | 0331 00 
2c | 0332 2c pushx_vu u8 62                | push pai2:u8
3e | 0333 3e 
0d | 0334 0d eq                            | eq
80 | 0335 80 ifelse 66 67                  | ifelse True_66 EndIf_67
42 | 0336 42 
43 | 0337 43 
2d | 0338 2d pushx_vu u16 66               | push msgRadio2_source:u16
42 | 0339 42 
54 | 0340 54 popx_u u8 62                  | pop pai2
3e | 0341 3e 
7c | 0342 7c exec 67                       | goto u8 67
43 | 0343 43 
7c | 0344 7c exec 70                       | goto u8 70
46 | 0345 46 
b4 | 0346 b4 set_v u16 66 58               | msgRadio2_source=nodeId
42 | 0347 42 
3a | 0348 3a 
90 | 0349 90 outevtx_v 19 25 _msgRadio2_t* 90  | emit Q_PUT len=25 var=msgRadio2
13 | 0350 13 
19 | 0351 19 
5a | 0352 5a 
8c | 0353 8c outevtx_c 2 1 3               | emit LED0 len=1 const=3
02 | 0354 02 
01 | 0355 01 
03 | 0356 03 
8c | 0357 8c outevtx_c 18 1 1              | emit REQ_CUSTOM_A len=1 const=1
12 | 0358 12 
01 | 0359 01 
01 | 0360 01 
7c | 0361 7c exec 96                       | goto u8 96
60 | 0362 60 
2c | 0363 2c pushx_vu u8 61                | push pai1:u8
3d | 0364 3d 
55 | 0365 55 popx_u u16 68                 | pop msgRadio2_target
44 | 0366 44 
e0 | 0367 e0 tkins_max 0 82                | insert track ParOr_sub_1_82
52 | 0368 52 
e0 | 0369 e0 tkins_max 0 83                | insert track ParOr_sub_2_83
53 | 0370 53 
01 | 0371 01 end                           | end
90 | 0372 90 outevtx_v 19 25 _msgRadio2_t* 90  | emit Q_PUT len=25 var=msgRadio2
13 | 0373 13 
19 | 0374 19 
5a | 0375 5a 
e0 | 0376 e0 tkins_max 0 84                | insert track ParOr_out_84
54 | 0377 54 
01 | 0378 01 end                           | end
c1 | 0379 c1 clken_c 1 5000 88             | clock enable Awake_5000000_88 5000msec
01 | 0380 01 
13 | 0381 13 
88 | 0382 88 
58 | 0383 58 
01 | 0384 01 end                           | end
2c | 0385 2c pushx_vu u8 62                | push pai2:u8
3e | 0386 3e 
55 | 0387 55 popx_u u16 68                 | pop msgRadio2_target
44 | 0388 44 
90 | 0389 90 outevtx_v 19 25 _msgRadio2_t* 90  | emit Q_PUT len=25 var=msgRadio2
13 | 0390 13 
19 | 0391 19 
5a | 0392 5a 
e0 | 0393 e0 tkins_max 0 84                | insert track ParOr_out_84
54 | 0394 54 
01 | 0395 01 end                           | end
68 | 0396 68 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 0397 08 
08 | 0398 08 
7c | 0399 7c exec 96                       | goto u8 96
60 | 0400 60 
7c | 0401 7c exec 52                       | goto u8 52
34 | 0402 34 
68 | 0403 68 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 0404 08 
08 | 0405 08 
68 | 0406 68 memclr 44 2                   | clear EXT gates for RECEIVE
2c | 0407 2c 
02 | 0408 02 
01 | 0409 01 end                           | end
a5 | 0410 a5 set_c u16 54 100              | await CUSTOM_A[0]
36 | 0411 36 
64 | 0412 64 
01 | 0413 01 end                           | end
c1 | 0414 c1 clken_c 2 10000 101           | clock enable Awake_10000000_101 10000msec
02 | 0415 02 
27 | 0416 27 
10 | 0417 10 
65 | 0418 65 
01 | 0419 01 end                           | end
2c | 0420 2c pushx_vu u8 62                | push pai2:u8
3e | 0421 3e 
2d | 0422 2d pushx_vu u16 66               | push msgRadio2_source:u16
42 | 0423 42 
0d | 0424 0d eq                            | eq
2c | 0425 2c pushx_vu u8 61                | push pai1:u8
3d | 0426 3d 
2d | 0427 2d pushx_vu u16 66               | push msgRadio2_source:u16
42 | 0428 42 
0d | 0429 0d eq                            | eq
13 | 0430 13 lor                           | lor
80 | 0431 80 ifelse 123 124                | ifelse True_123 EndIf_124
7b | 0432 7b 
7c | 0433 7c 
b0 | 0434 b0 set_v u8 60 65                | lastReq=msgRadio2_id
3c | 0435 3c 
41 | 0436 41 
94 | 0437 94 outevt_z 6                    | emit REQ_PHOTO
06 | 0438 06 
a0 | 0439 a0 set_c u8 92 1                 | msgRadio4_id = 1
5c | 0440 5c 
01 | 0441 01 
1c | 0442 1c push_c 92                     | push &msgRadio4_id
5c | 0443 5c 
55 | 0444 55 popx_u u16 117                | pop *msgRadio4
75 | 0445 75 
b4 | 0446 b4 set_v u16 93 58               | msgRadio4_source=nodeId
5d | 0447 5d 
3a | 0448 3a 
2c | 0449 2c pushx_vu u8 61                | push pai1:u8
3d | 0450 3d 
55 | 0451 55 popx_u u16 95                 | pop msgRadio4_target
5f | 0452 5f 
a0 | 0453 a0 set_c u8 97 1                 | msgRadio4_d8_1 = 1
61 | 0454 61 
01 | 0455 01 
a5 | 0456 a5 set_c u16 34 119              | await PHOTO[0]
22 | 0457 22 
77 | 0458 77 
01 | 0459 01 end                           | end
70 | 0460 70 getextdt_v 99 1               | get Ext Data msgRadio4_d8_3 1
63 | 0461 63 
01 | 0462 01 
90 | 0463 90 outevtx_v 19 25 _msgRadio4_t* 117  | emit Q_PUT len=25 var=msgRadio4
13 | 0464 13 
19 | 0465 19 
75 | 0466 75 
7c | 0467 7c exec 124                      | goto u8 124
7c | 0468 7c 
7c | 0469 7c exec 97                       | goto u8 97
61 | 0470 61 
68 | 0471 68 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 0472 10 
08 | 0473 08 
68 | 0474 68 memclr 34 2                   | clear EXT gates for PHOTO
22 | 0475 22 
02 | 0476 02 
68 | 0477 68 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 0478 36 
02 | 0479 02 
01 | 0480 01 end                           | end
7c | 0481 7c exec 127                      | goto u8 127
7f | 0482 7f 
01 | 0483 01 end                           | end
a0 | 0484 a0 set_c u8 120 1                | msgRadio4_id = 1
78 | 0485 78 
01 | 0486 01 
1c | 0487 1c push_c 120                    | push &msgRadio4_id
78 | 0488 78 
55 | 0489 55 popx_u u16 145                | pop *msgRadio4
91 | 0490 91 
1c | 0491 1c push_c 147                    | push &size
93 | 0492 93 
55 | 0493 55 popx_u u16 148                | pop *size_t
94 | 0494 94 
a5 | 0495 a5 set_c u16 47 136              | await Q_READY[0]
2f | 0496 2f 
88 | 0497 88 
01 | 0498 01 end                           | end
90 | 0499 90 outevtx_v 21 1 u8* 148        | emit Q_SIZE len=1 var=size_t
15 | 0500 15 
01 | 0501 01 
94 | 0502 94 
1c | 0503 1c push_c 0                      | push 0
00 | 0504 00 
2c | 0505 2c pushx_vu u8 147               | push size:u8
93 | 0506 93 
0d | 0507 0d eq                            | eq
80 | 0508 80 ifelse 144 145                | ifelse True_144 EndIf_145
90 | 0509 90 
91 | 0510 91 
f1 | 0511 f1 tkins_z 1 9 139               | insert track Loop_out_139
09 | 0512 09 
8b | 0513 8b 
01 | 0514 01 end                           | end
7c | 0515 7c exec 145                      | goto u8 145
91 | 0516 91 
90 | 0517 90 outevtx_v 20 25 _msgRadio4_t* 145  | emit Q_GET len=25 var=msgRadio4
14 | 0518 14 
19 | 0519 19 
91 | 0520 91 
1d | 0521 1d push_c 0xffff                 | push 0xffff
ff | 0522 ff 
ff | 0523 ff 
2d | 0524 2d pushx_vu u16 123              | push msgRadio4_target:u16
7b | 0525 7b 
0d | 0526 0d eq                            | eq
80 | 0527 80 ifelse 169 170                | ifelse True_169 False_170
a9 | 0528 a9 
aa | 0529 aa 
90 | 0530 90 outevtx_v 8 25 _msgRadio4_t* 145  | emit SEND len=25 var=msgRadio4
08 | 0531 08 
19 | 0532 19 
91 | 0533 91 
a5 | 0534 a5 set_c u16 38 153              | await SEND_DONE[0]
26 | 0535 26 
99 | 0536 99 
01 | 0537 01 end                           | end
7c | 0538 7c exec 171                      | goto u8 171
ab | 0539 ab 
a0 | 0540 a0 set_c u8 150 0                | try = 0
96 | 0541 96 
00 | 0542 00 
90 | 0543 90 outevtx_v 9 25 _msgRadio4_t* 145  | emit SEND_ACK len=25 var=msgRadio4
09 | 0544 09 
19 | 0545 19 
91 | 0546 91 
a5 | 0547 a5 set_c u16 41 162              | await SEND_DONE_ACK[0]
29 | 0548 29 
a2 | 0549 a2 
01 | 0550 01 end                           | end
70 | 0551 70 getextdt_v 119 1              | get Ext Data x 1
77 | 0552 77 
01 | 0553 01 
2c | 0554 2c pushx_vu u8 119               | push x:u8
77 | 0555 77 
80 | 0556 80 ifelse 166 167                | ifelse True_166 False_167
a6 | 0557 a6 
a7 | 0558 a7 
f1 | 0559 f1 tkins_z 1 14 157              | insert track Loop_out_157
0e | 0560 0e 
9d | 0561 9d 
01 | 0562 01 end                           | end
7c | 0563 7c exec 168                      | goto u8 168
a8 | 0564 a8 
1c | 0565 1c push_c 1                      | push 1
01 | 0566 01 
2c | 0567 2c pushx_vu u8 150               | push try:u8
96 | 0568 96 
04 | 0569 04 add                           | add
54 | 0570 54 popx_u u8 150                 | pop try
96 | 0571 96 
7c | 0572 7c exec 168                      | goto u8 168
a8 | 0573 a8 
7c | 0574 7c exec 155                      | goto u8 155
9b | 0575 9b 
68 | 0576 68 memclr 41 2                   | clear EXT gates for SEND_DONE_ACK
29 | 0577 29 
02 | 0578 02 
7c | 0579 7c exec 171                      | goto u8 171
ab | 0580 ab 
c0 | 0581 c0 clken_c 3 50 172              | clock enable Awake_50000_172 50msec
03 | 0582 03 
32 | 0583 32 
ac | 0584 ac 
01 | 0585 01 end                           | end
7c | 0586 7c exec 137                      | goto u8 137
89 | 0587 89 
68 | 0588 68 memclr 24 8                   | clear WClocks gates from 3 to 4
18 | 0589 18 
08 | 0590 08 
68 | 0591 68 memclr 38 2                   | clear EXT gates for SEND_DONE
26 | 0592 26 
02 | 0593 02 
68 | 0594 68 memclr 41 2                   | clear EXT gates for SEND_DONE_ACK
29 | 0595 29 
02 | 0596 02 
7c | 0597 7c exec 133                      | goto u8 133
85 | 0598 85 
68 | 0599 68 memclr 24 8                   | clear WClocks gates from 3 to 4
18 | 0600 18 
08 | 0601 08 
68 | 0602 68 memclr 38 2                   | clear EXT gates for SEND_DONE
26 | 0603 26 
02 | 0604 02 
68 | 0605 68 memclr 41 2                   | clear EXT gates for SEND_DONE_ACK
29 | 0606 29 
02 | 0607 02 
68 | 0608 68 memclr 47 2                   | clear EXT gates for Q_READY
2f | 0609 2f 
02 | 0610 02 
01 | 0611 01 end                           | end
01 | 0612 01 end                           | end
68 | 0613 68 memclr 0 32                   | clear WClocks gates from 0 to 4
00 | 0614 00 
20 | 0615 20 
02 | 0616 02 return                        | return
01 | 0617 01 end                           | end
01 | 0618 01 L1(0x01) => 171 (0xab)
ab | 0619 ab 
7d | 0620 7d L125(0x7d) => 224 (0xe0)
e0 | 0621 e0 
19 | 0622 19 L25(0x19) => 238 (0xee)
ee | 0623 ee 
0d | 0624 0d L13(0x0d) => 216 (0xd8)
d8 | 0625 d8 
1b | 0626 1b L27(0x1b) => 280 (0x0118)
01 | 0627 01 
18 | 0628 18 
03 | 0629 03 L3(0x03) => 613 (0x0265)
02 | 0630 02 
65 | 0631 65 
36 | 0632 36 L54(0x36) => 403 (0x0193)
01 | 0633 01 
93 | 0634 93 
7b | 0635 7b L123(0x7b) => 434 (0x01b2)
01 | 0636 01 
b2 | 0637 b2 
7c | 0638 7c L124(0x7c) => 469 (0x01d5)
01 | 0639 01 
d5 | 0640 d5 
2f | 0641 2f L47(0x2f) => 297 (0x0129)
01 | 0642 01 
29 | 0643 29 
0e | 0644 0e L14(0x0e) => 484 (0x01e4)
01 | 0645 01 
e4 | 0646 e4 
5e | 0647 5e L94(0x5e) => 316 (0x013c)
01 | 0648 01 
3c | 0649 3c 
9b | 0650 9b L155(0x9b) => 543 (0x021f)
02 | 0651 02 
1f | 0652 1f 
7e | 0653 7e L126(0x7e) => 285 (0x011d)
01 | 0654 01 
1d | 0655 1d 
5f | 0656 5f L95(0x5f) => 363 (0x016b)
01 | 0657 01 
6b | 0658 6b 
38 | 0659 38 L56(0x38) => 301 (0x012d)
01 | 0660 01 
2d | 0661 2d 
7f | 0662 7f L127(0x7f) => 483 (0x01e3)
01 | 0663 01 
e3 | 0664 e3 
60 | 0665 60 L96(0x60) => 401 (0x0191)
01 | 0666 01 
91 | 0667 91 
61 | 0668 61 L97(0x61) => 410 (0x019a)
01 | 0669 01 
9a | 0670 9a 
42 | 0671 42 L66(0x42) => 338 (0x0152)
01 | 0672 01 
52 | 0673 52 
52 | 0674 52 L82(0x52) => 372 (0x0174)
01 | 0675 01 
74 | 0676 74 
87 | 0677 87 L135(0x87) => 599 (0x0257)
02 | 0678 02 
57 | 0679 57 
43 | 0680 43 L67(0x43) => 344 (0x0158)
01 | 0681 01 
58 | 0682 58 
53 | 0683 53 L83(0x53) => 379 (0x017b)
01 | 0684 01 
7b | 0685 7b 
63 | 0686 63 L99(0x63) => 471 (0x01d7)
01 | 0687 01 
d7 | 0688 d7 
a8 | 0689 a8 L168(0xa8) => 574 (0x023e)
02 | 0690 02 
3e | 0691 3e 
44 | 0692 44 L68(0x44) => 324 (0x0144)
01 | 0693 01 
44 | 0694 44 
54 | 0695 54 L84(0x54) => 396 (0x018c)
01 | 0696 01 
8c | 0697 8c 
64 | 0698 64 L100(0x64) => 414 (0x019e)
01 | 0699 01 
9e | 0700 9e 
a7 | 0701 a7 L167(0xa7) => 565 (0x0235)
02 | 0702 02 
35 | 0703 35 
45 | 0704 45 L69(0x45) => 330 (0x014a)
01 | 0705 01 
4a | 0706 4a 
2b | 0707 2b L43(0x2b) => 278 (0x0116)
01 | 0708 01 
16 | 0709 16 
a9 | 0710 a9 L169(0xa9) => 530 (0x0212)
02 | 0711 02 
12 | 0712 12 
46 | 0713 46 L70(0x46) => 346 (0x015a)
01 | 0714 01 
5a | 0715 5a 
aa | 0716 aa L170(0xaa) => 540 (0x021c)
02 | 0717 02 
1c | 0718 1c 
8b | 0719 8b L139(0x8b) => 588 (0x024c)
02 | 0720 02 
4c | 0721 4c 
ab | 0722 ab L171(0xab) => 581 (0x0245)
02 | 0723 02 
45 | 0724 45 
9d | 0725 9d L157(0x9d) => 576 (0x0240)
02 | 0726 02 
40 | 0727 40 
ac | 0728 ac L172(0xac) => 586 (0x024a)
02 | 0729 02 
4a | 0730 4a 
34 | 0731 34 L52(0x34) => 297 (0x0129)
01 | 0732 01 
29 | 0733 29 
77 | 0734 77 L119(0x77) => 460 (0x01cc)
01 | 0735 01 
cc | 0736 cc 
a6 | 0737 a6 L166(0xa6) => 559 (0x022f)
02 | 0738 02 
2f | 0739 2f 
58 | 0740 58 L88(0x58) => 385 (0x0181)
01 | 0741 01 
81 | 0742 81 
a2 | 0743 a2 L162(0xa2) => 551 (0x0227)
02 | 0744 02 
27 | 0745 27 
99 | 0746 99 L153(0x99) => 538 (0x021a)
02 | 0747 02 
1a | 0748 1a 
90 | 0749 90 L144(0x90) => 511 (0x01ff)
01 | 0750 01 
ff | 0751 ff 
89 | 0752 89 L137(0x89) => 499 (0x01f3)
01 | 0753 01 
f3 | 0754 f3 
91 | 0755 91 L145(0x91) => 517 (0x0205)
02 | 0756 02 
05 | 0757 05 
88 | 0758 88 L136(0x88) => 499 (0x01f3)
01 | 0759 01 
f3 | 0760 f3 
85 | 0761 85 L133(0x85) => 495 (0x01ef)
01 | 0762 01 
ef | 0763 ef 
65 | 0764 65 L101(0x65) => 420 (0x01a4)
01 | 0765 01 
a4 | 0766 a4 
30 | 0767 30 L48(0x30) => 410 (0x019a)
01 | 0768 01 
9a | 0769 9a 
