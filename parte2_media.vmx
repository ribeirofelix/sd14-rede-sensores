206 842 844 1036 1036 1036 5 3 0 24
00 | 0000 0 track:0
00 | 0001 0
00 | 0002 0
00 | 0003 0
00 | 0004 0 track:1
00 | 0005 0
00 | 0006 0
00 | 0007 0
00 | 0008 0 track:2
00 | 0009 0
00 | 0010 0
00 | 0011 0
00 | 0012 0 track:3
00 | 0013 0
00 | 0014 0
00 | 0015 0
00 | 0016 0 track:4
00 | 0017 0
00 | 0018 0
00 | 0019 0
00 | 0020 0 track:5
00 | 0021 0
00 | 0022 0
00 | 0023 0
00 | 0024 0000 wClock:0
00 | 0025 0001
00 | 0026 0002
00 | 0027 0003
00 | 0028 0004
00 | 0029 0005
00 | 0030 0006
00 | 0031 0007
00 | 0032 0008 wClock:1
00 | 0033 0009
00 | 0034 0010
00 | 0035 0011
00 | 0036 0012
00 | 0037 0013
00 | 0038 0014
00 | 0039 0015
00 | 0040 0016 wClock:2
00 | 0041 0017
00 | 0042 0018
00 | 0043 0019
00 | 0044 0020
00 | 0045 0021
00 | 0046 0022
00 | 0047 0023
00 | 0048 0024 TEMP gate(s) = 0
00 | 0049 0025 PHOTO gate(s) = 1
00 | 0050 0026
00 | 0051 0027
00 | 0052 0028 VOLTS gate(s) = 0
00 | 0053 0029 SEND_DONE gate(s) = 1
00 | 0054 0030
00 | 0055 0031
00 | 0056 0032 SEND_DONE_ACK gate(s) = 2
00 | 0057 0033
00 | 0058 0034
00 | 0059 0035
00 | 0060 0036
00 | 0061 0037 RECEIVE gate(s) = 2
00 | 0062 0038
00 | 0063 0039
00 | 0064 0040
00 | 0065 0041
00 | 0066 0042 Q_READY gate(s) = 1
00 | 0067 0043
00 | 0068 0044
00 | 0069 0045 PORT_A gate(s) = 0
00 | 0070 0046 PORT_B gate(s) = 0
00 | 0071 0047 INT_A gate(s) = 0
00 | 0072 0048 INT_B gate(s) = 0
00 | 0073 0049 CUSTOM_A gate(s) = 1
00 | 0074 0050
00 | 0075 0051
00 | 0076 0052 $ret
00 | 0077 0053 
00 | 0078 0054 nodeId
00 | 0079 0055 
00 | 0080 0056 lastReq
00 | 0081 0057 pai1
00 | 0082 0058 pai2
00 | 0083 0059 acumulador1
00 | 0084 0060 
00 | 0085 0061 acumulador2
00 | 0086 0062 myHop
00 | 0087 0063 msgRadio2_id
00 | 0088 0064 msgRadio2_source
00 | 0089 0065 
00 | 0090 0066 msgRadio2_target
00 | 0091 0067 
00 | 0092 0068 msgRadio2_d8_1
00 | 0093 0069 msgRadio2_d8_2
00 | 0094 0070 msgRadio2_d8_3
00 | 0095 0071 msgRadio2_d8_4
00 | 0096 0072 msgRadio2_d16_1
00 | 0097 0073 
00 | 0098 0074 msgRadio2_d16_2
00 | 0099 0075 
00 | 0100 0076 msgRadio2_d16_3
00 | 0101 0077 
00 | 0102 0078 msgRadio2_d16_4
00 | 0103 0079 
00 | 0104 0080 msgRadio2_d32_1
00 | 0105 0081 
00 | 0106 0082 
00 | 0107 0083 
00 | 0108 0084 msgRadio2_d32_2
00 | 0109 0085 
00 | 0110 0086 
00 | 0111 0087 
00 | 0112 0088 msgRadio2
00 | 0113 0089 
00 | 0114 0090 msgRadio2_id
00 | 0115 0091 msgRadio2_source
00 | 0116 0092 
00 | 0117 0093 msgRadio2_target
00 | 0118 0094 
00 | 0119 0095 msgRadio2_d8_1
00 | 0120 0096 msgRadio2_d8_2
00 | 0121 0097 msgRadio2_d8_3
00 | 0122 0098 msgRadio2_d8_4
00 | 0123 0099 msgRadio2_d16_1
00 | 0124 0100 
00 | 0125 0101 msgRadio2_d16_2
00 | 0126 0102 
00 | 0127 0103 msgRadio2_d16_3
00 | 0128 0104 
00 | 0129 0105 msgRadio2_d16_4
00 | 0130 0106 
00 | 0131 0107 msgRadio2_d32_1
00 | 0132 0108 
00 | 0133 0109 
00 | 0134 0110 
00 | 0135 0111 msgRadio2_d32_2
00 | 0136 0112 
00 | 0137 0113 
00 | 0138 0114 
00 | 0139 0115 msgRadio2
00 | 0140 0116 
00 | 0141 0117 x
00 | 0142 0118 msgRadio4_id
00 | 0143 0119 msgRadio4_source
00 | 0144 0120 
00 | 0145 0121 msgRadio4_target
00 | 0146 0122 
00 | 0147 0123 msgRadio4_d8_1
00 | 0148 0124 msgRadio4_d8_2
00 | 0149 0125 msgRadio4_d8_3
00 | 0150 0126 msgRadio4_d8_4
00 | 0151 0127 msgRadio4_d16_1
00 | 0152 0128 
00 | 0153 0129 msgRadio4_d16_2
00 | 0154 0130 
00 | 0155 0131 msgRadio4_d16_3
00 | 0156 0132 
00 | 0157 0133 msgRadio4_d16_4
00 | 0158 0134 
00 | 0159 0135 msgRadio4_d32_1
00 | 0160 0136 
00 | 0161 0137 
00 | 0162 0138 
00 | 0163 0139 msgRadio4_d32_2
00 | 0164 0140 
00 | 0165 0141 
00 | 0166 0142 
00 | 0167 0143 msgRadio4
00 | 0168 0144 
00 | 0169 0145 size
00 | 0170 0146 size_t
00 | 0171 0147 
00 | 0172 0148 try
00 | 0173 0149 lumus
00 | 0174 0150 msgRadio4_id
00 | 0175 0151 msgRadio4_source
00 | 0176 0152 
00 | 0177 0153 msgRadio4_target
00 | 0178 0154 
00 | 0179 0155 msgRadio4_d8_1
00 | 0180 0156 msgRadio4_d8_2
00 | 0181 0157 msgRadio4_d8_3
00 | 0182 0158 msgRadio4_d8_4
00 | 0183 0159 msgRadio4_d16_1
00 | 0184 0160 
00 | 0185 0161 msgRadio4_d16_2
00 | 0186 0162 
00 | 0187 0163 msgRadio4_d16_3
00 | 0188 0164 
00 | 0189 0165 msgRadio4_d16_4
00 | 0190 0166 
00 | 0191 0167 msgRadio4_d32_1
00 | 0192 0168 
00 | 0193 0169 
00 | 0194 0170 
00 | 0195 0171 msgRadio4_d32_2
00 | 0196 0172 
00 | 0197 0173 
00 | 0198 0174 
00 | 0199 0175 msgRadio4
00 | 0200 0176 
00 | 0201 0177 timeout
00 | 0202 0178 
00 | 0203 0179 qtdnos
00 | 0204 0180 ParAnd_flag[2]
00 | 0205 0181 
68 | 0206 68 memclr 0 52                   | clear all gates
00 | 0207 00 
34 | 0208 34 
a0 | 0209 a0 set_c u8 25 1                 | config gate PHOTO with 1 await(s)
19 | 0210 19 
01 | 0211 01 
a0 | 0212 a0 set_c u8 29 1                 | config gate SEND_DONE with 1 await(s)
1d | 0213 1d 
01 | 0214 01 
a0 | 0215 a0 set_c u8 32 2                 | config gate SEND_DONE_ACK with 2 await(s)
20 | 0216 20 
02 | 0217 02 
a0 | 0218 a0 set_c u8 37 2                 | config gate RECEIVE with 2 await(s)
25 | 0219 25 
02 | 0220 02 
a0 | 0221 a0 set_c u8 42 1                 | config gate Q_READY with 1 await(s)
2a | 0222 2a 
01 | 0223 01 
a0 | 0224 a0 set_c u8 49 1                 | config gate CUSTOM_A with 1 await(s)
31 | 0225 31 
01 | 0226 01 
91 | 0227 91 outevtx_v 0 2 u16 54          | emit INIT len=2 var=nodeId
00 | 0228 00 
02 | 0229 02 
36 | 0230 36 
a0 | 0231 a0 set_c u8 56 0                 | lastReq = 0
38 | 0232 38 
00 | 0233 00 
a0 | 0234 a0 set_c u8 57 0                 | pai1 = 0
39 | 0235 39 
00 | 0236 00 
a0 | 0237 a0 set_c u8 58 0                 | pai2 = 0
3a | 0238 3a 
00 | 0239 00 
a5 | 0240 a5 set_c u16 59 0                | acumulador1 = 0
3b | 0241 3b 
00 | 0242 00 
a0 | 0243 a0 set_c u8 61 0                 | acumulador2 = 0
3d | 0244 3d 
00 | 0245 00 
a0 | 0246 a0 set_c u8 62 0                 | myHop = 0
3e | 0247 3e 
00 | 0248 00 
e0 | 0249 e0 tkins_max 0 14                | insert track ParEver_sub_1_14
0e | 0250 0e 
e0 | 0251 e0 tkins_max 0 15                | insert track ParEver_sub_2_15
0f | 0252 0f 
e0 | 0253 e0 tkins_max 0 16                | insert track ParEver_sub_3_16
10 | 0254 10 
01 | 0255 01 end                           | end
1c | 0256 1c push_c 11                     | push 11
0b | 0257 0b 
2d | 0258 2d pushx_vu u16 54               | push nodeId:u16
36 | 0259 36 
0d | 0260 0d eq                            | eq
80 | 0261 80 ifelse 92 93                  | ifelse True_92 False_93
5c | 0262 5c 
5d | 0263 5d 
a0 | 0264 a0 set_c u8 57 1                 | pai1 = 1
39 | 0265 39 
01 | 0266 01 
a0 | 0267 a0 set_c u8 58 1                 | pai2 = 1
3a | 0268 3a 
01 | 0269 01 
a0 | 0270 a0 set_c u8 63 1                 | msgRadio1_id = 1
3f | 0271 3f 
01 | 0272 01 
1c | 0273 1c push_c 63                     | push &msgRadio1_id
3f | 0274 3f 
55 | 0275 55 popx_u u16 88                 | pop *msgRadio1
58 | 0276 58 
a0 | 0277 a0 set_c u8 90 1                 | msgRadio2_id = 1
5a | 0278 5a 
01 | 0279 01 
1c | 0280 1c push_c 90                     | push &msgRadio2_id
5a | 0281 5a 
55 | 0282 55 popx_u u16 115                | pop *msgRadio2
73 | 0283 73 
b4 | 0284 b4 set_v u16 64 54               | msgRadio1_source=nodeId
40 | 0285 40 
36 | 0286 36 
a4 | 0287 a4 set_c u16 66 0xffff           | msgRadio1_target = 0xffff
42 | 0288 42 
ff | 0289 ff 
ff | 0290 ff 
a0 | 0291 a0 set_c u8 68 0                 | msgRadio1_d8_1 = 0
44 | 0292 44 
00 | 0293 00 
a0 | 0294 a0 set_c u8 62 1                 | myHop = 1
3e | 0295 3e 
01 | 0296 01 
b0 | 0297 b0 set_v u8 69 62                | msgRadio1_d8_2=myHop
45 | 0298 45 
3e | 0299 3e 
1c | 0300 1c push_c 1                      | push 1
01 | 0301 01 
2c | 0302 2c pushx_vu u8 56                | push lastReq:u8
38 | 0303 38 
04 | 0304 04 add                           | add
54 | 0305 54 popx_u u8 56                  | pop lastReq
38 | 0306 38 
b0 | 0307 b0 set_v u8 63 56                | msgRadio1_id=lastReq
3f | 0308 3f 
38 | 0309 38 
90 | 0310 90 outevtx_v 19 25 _msgRadio1_t* 88  | emit Q_PUT len=25 var=msgRadio1
13 | 0311 13 
19 | 0312 19 
58 | 0313 58 
8c | 0314 8c outevtx_c 18 1 1              | emit REQ_CUSTOM_A len=1 const=1
12 | 0315 12 
01 | 0316 01 
01 | 0317 01 
c2 | 0318 c2 clken_c 0 70000 48            | clock enable Awake_70000000_48 70000msec
00 | 0319 00 
01 | 0320 01 
11 | 0321 11 
70 | 0322 70 
30 | 0323 30 
01 | 0324 01 end                           | end
7c | 0325 7c exec 29                       | goto u8 29
1d | 0326 1d 
68 | 0327 68 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 0328 00 
08 | 0329 08 
7c | 0330 7c exec 94                       | goto u8 94
5e | 0331 5e 
a0 | 0332 a0 set_c u8 63 1                 | msgRadio2_id = 1
3f | 0333 3f 
01 | 0334 01 
1c | 0335 1c push_c 63                     | push &msgRadio2_id
3f | 0336 3f 
55 | 0337 55 popx_u u16 88                 | pop *msgRadio2
58 | 0338 58 
a5 | 0339 a5 set_c u16 38 56               | await RECEIVE[0]
26 | 0340 26 
38 | 0341 38 
01 | 0342 01 end                           | end
6c | 0343 6c getextdt_p 88 25              | get Ext Data *msgRadio2 25
58 | 0344 58 
19 | 0345 19 
1c | 0346 1c push_c 0                      | push 0
00 | 0347 00 
2c | 0348 2c pushx_vu u8 68                | push msgRadio2_d8_1:u8
44 | 0349 44 
0d | 0350 0d eq                            | eq
80 | 0351 80 ifelse 90 91                  | ifelse True_90 EndIf_91
5a | 0352 5a 
5b | 0353 5b 
1c | 0354 1c push_c 0                      | push 0
00 | 0355 00 
2c | 0356 2c pushx_vu u8 57                | push pai1:u8
39 | 0357 39 
0d | 0358 0d eq                            | eq
80 | 0359 80 ifelse 68 69                  | ifelse True_68 False_69
44 | 0360 44 
45 | 0361 45 
2d | 0362 2d pushx_vu u16 64               | push msgRadio2_source:u16
40 | 0363 40 
54 | 0364 54 popx_u u8 57                  | pop pai1
39 | 0365 39 
1c | 0366 1c push_c 1                      | push 1
01 | 0367 01 
2c | 0368 2c pushx_vu u8 69                | push msgRadio2_d8_2:u8
45 | 0369 45 
04 | 0370 04 add                           | add
54 | 0371 54 popx_u u8 62                  | pop myHop
3e | 0372 3e 
7c | 0373 7c exec 70                       | goto u8 70
46 | 0374 46 
1c | 0375 1c push_c 0                      | push 0
00 | 0376 00 
2c | 0377 2c pushx_vu u8 58                | push pai2:u8
3a | 0378 3a 
0d | 0379 0d eq                            | eq
80 | 0380 80 ifelse 66 67                  | ifelse True_66 EndIf_67
42 | 0381 42 
43 | 0382 43 
2d | 0383 2d pushx_vu u16 64               | push msgRadio2_source:u16
40 | 0384 40 
54 | 0385 54 popx_u u8 58                  | pop pai2
3a | 0386 3a 
7c | 0387 7c exec 67                       | goto u8 67
43 | 0388 43 
7c | 0389 7c exec 70                       | goto u8 70
46 | 0390 46 
2c | 0391 2c pushx_vu u8 56                | push lastReq:u8
38 | 0392 38 
2c | 0393 2c pushx_vu u8 63                | push msgRadio2_id:u8
3f | 0394 3f 
11 | 0395 11 gt                            | gt
2c | 0396 2c pushx_vu u8 58                | push pai2:u8
3a | 0397 3a 
2d | 0398 2d pushx_vu u16 64               | push msgRadio2_source:u16
40 | 0399 40 
0d | 0400 0d eq                            | eq
14 | 0401 14 land                          | land
2c | 0402 2c pushx_vu u8 57                | push pai1:u8
39 | 0403 39 
2d | 0404 2d pushx_vu u16 64               | push msgRadio2_source:u16
40 | 0405 40 
0d | 0406 0d eq                            | eq
13 | 0407 13 lor                           | lor
80 | 0408 80 ifelse 88 89                  | ifelse True_88 EndIf_89
58 | 0409 58 
59 | 0410 59 
b0 | 0411 b0 set_v u8 56 63                | lastReq=msgRadio2_id
38 | 0412 38 
3f | 0413 3f 
b4 | 0414 b4 set_v u16 64 54               | msgRadio2_source=nodeId
40 | 0415 40 
36 | 0416 36 
b0 | 0417 b0 set_v u8 69 62                | msgRadio2_d8_2=myHop
45 | 0418 45 
3e | 0419 3e 
90 | 0420 90 outevtx_v 19 25 _msgRadio2_t* 88  | emit Q_PUT len=25 var=msgRadio2
13 | 0421 13 
19 | 0422 19 
58 | 0423 58 
8c | 0424 8c outevtx_c 18 1 1              | emit REQ_CUSTOM_A len=1 const=1
12 | 0425 12 
01 | 0426 01 
01 | 0427 01 
7c | 0428 7c exec 89                       | goto u8 89
59 | 0429 59 
7c | 0430 7c exec 91                       | goto u8 91
5b | 0431 5b 
7c | 0432 7c exec 52                       | goto u8 52
34 | 0433 34 
68 | 0434 68 memclr 38 2                   | clear EXT gates for RECEIVE
26 | 0435 26 
02 | 0436 02 
7c | 0437 7c exec 94                       | goto u8 94
5e | 0438 5e 
01 | 0439 01 end                           | end
a0 | 0440 a0 set_c u8 118 1                | msgRadio4_id = 1
76 | 0441 76 
01 | 0442 01 
1c | 0443 1c push_c 118                    | push &msgRadio4_id
76 | 0444 76 
55 | 0445 55 popx_u u16 143                | pop *msgRadio4
8f | 0446 8f 
1c | 0447 1c push_c 145                    | push &size
91 | 0448 91 
55 | 0449 55 popx_u u16 146                | pop *size_t
92 | 0450 92 
a5 | 0451 a5 set_c u16 43 103              | await Q_READY[0]
2b | 0452 2b 
67 | 0453 67 
01 | 0454 01 end                           | end
90 | 0455 90 outevtx_v 21 1 u8* 146        | emit Q_SIZE len=1 var=size_t
15 | 0456 15 
01 | 0457 01 
92 | 0458 92 
1c | 0459 1c push_c 0                      | push 0
00 | 0460 00 
2c | 0461 2c pushx_vu u8 145               | push size:u8
91 | 0462 91 
0d | 0463 0d eq                            | eq
80 | 0464 80 ifelse 111 112                | ifelse True_111 EndIf_112
6f | 0465 6f 
70 | 0466 70 
f1 | 0467 f1 tkins_z 1 9 106               | insert track Loop_out_106
09 | 0468 09 
6a | 0469 6a 
01 | 0470 01 end                           | end
7c | 0471 7c exec 112                      | goto u8 112
70 | 0472 70 
90 | 0473 90 outevtx_v 20 25 _msgRadio4_t* 143  | emit Q_GET len=25 var=msgRadio4
14 | 0474 14 
19 | 0475 19 
8f | 0476 8f 
1d | 0477 1d push_c 0xffff                 | push 0xffff
ff | 0478 ff 
ff | 0479 ff 
2d | 0480 2d pushx_vu u16 121              | push msgRadio4_target:u16
79 | 0481 79 
0d | 0482 0d eq                            | eq
80 | 0483 80 ifelse 157 158                | ifelse True_157 False_158
9d | 0484 9d 
9e | 0485 9e 
90 | 0486 90 outevtx_v 8 25 _msgRadio4_t* 143  | emit SEND len=25 var=msgRadio4
08 | 0487 08 
19 | 0488 19 
8f | 0489 8f 
a5 | 0490 a5 set_c u16 30 120              | await SEND_DONE[0]
1e | 0491 1e 
78 | 0492 78 
01 | 0493 01 end                           | end
7c | 0494 7c exec 159                      | goto u8 159
9f | 0495 9f 
a0 | 0496 a0 set_c u8 148 0                | try = 0
94 | 0497 94 
00 | 0498 00 
90 | 0499 90 outevtx_v 9 25 _msgRadio4_t* 143  | emit SEND_ACK len=25 var=msgRadio4
09 | 0500 09 
19 | 0501 19 
8f | 0502 8f 
a5 | 0503 a5 set_c u16 33 129              | await SEND_DONE_ACK[0]
21 | 0504 21 
81 | 0505 81 
01 | 0506 01 end                           | end
70 | 0507 70 getextdt_v 117 1              | get Ext Data x 1
75 | 0508 75 
01 | 0509 01 
1c | 0510 1c push_c 3                      | push 3
03 | 0511 03 
2c | 0512 2c pushx_vu u8 148               | push try:u8
94 | 0513 94 
0d | 0514 0d eq                            | eq
2c | 0515 2c pushx_vu u8 117               | push x:u8
75 | 0516 75 
13 | 0517 13 lor                           | lor
80 | 0518 80 ifelse 134 135                | ifelse True_134 False_135
86 | 0519 86 
87 | 0520 87 
f1 | 0521 f1 tkins_z 1 14 124              | insert track Loop_out_124
0e | 0522 0e 
7c | 0523 7c 
01 | 0524 01 end                           | end
7c | 0525 7c exec 136                      | goto u8 136
88 | 0526 88 
1c | 0527 1c push_c 1                      | push 1
01 | 0528 01 
2c | 0529 2c pushx_vu u8 148               | push try:u8
94 | 0530 94 
04 | 0531 04 add                           | add
54 | 0532 54 popx_u u8 148                 | pop try
94 | 0533 94 
7c | 0534 7c exec 136                      | goto u8 136
88 | 0535 88 
7c | 0536 7c exec 122                      | goto u8 122
7a | 0537 7a 
68 | 0538 68 memclr 33 2                   | clear EXT gates for SEND_DONE_ACK
21 | 0539 21 
02 | 0540 02 
1c | 0541 1c push_c 3                      | push 3
03 | 0542 03 
2c | 0543 2c pushx_vu u8 148               | push try:u8
94 | 0544 94 
0d | 0545 0d eq                            | eq
80 | 0546 80 ifelse 155 156                | ifelse True_155 EndIf_156
9b | 0547 9b 
9c | 0548 9c 
2c | 0549 2c pushx_vu u8 58                | push pai2:u8
3a | 0550 3a 
55 | 0551 55 popx_u u16 121                | pop msgRadio4_target
79 | 0552 79 
90 | 0553 90 outevtx_v 9 25 _msgRadio4_t* 143  | emit SEND_ACK len=25 var=msgRadio4
09 | 0554 09 
19 | 0555 19 
8f | 0556 8f 
a5 | 0557 a5 set_c u16 35 147              | await SEND_DONE_ACK[1]
23 | 0558 23 
93 | 0559 93 
01 | 0560 01 end                           | end
70 | 0561 70 getextdt_v 117 1              | get Ext Data x 1
75 | 0562 75 
01 | 0563 01 
1c | 0564 1c push_c 6                      | push 6
06 | 0565 06 
2c | 0566 2c pushx_vu u8 148               | push try:u8
94 | 0567 94 
0d | 0568 0d eq                            | eq
2c | 0569 2c pushx_vu u8 117               | push x:u8
75 | 0570 75 
13 | 0571 13 lor                           | lor
80 | 0572 80 ifelse 152 153                | ifelse True_152 False_153
98 | 0573 98 
99 | 0574 99 
f1 | 0575 f1 tkins_z 1 16 142              | insert track Loop_out_142
10 | 0576 10 
8e | 0577 8e 
01 | 0578 01 end                           | end
7c | 0579 7c exec 154                      | goto u8 154
9a | 0580 9a 
1c | 0581 1c push_c 1                      | push 1
01 | 0582 01 
2c | 0583 2c pushx_vu u8 148               | push try:u8
94 | 0584 94 
04 | 0585 04 add                           | add
54 | 0586 54 popx_u u8 148                 | pop try
94 | 0587 94 
7c | 0588 7c exec 154                      | goto u8 154
9a | 0589 9a 
7c | 0590 7c exec 140                      | goto u8 140
8c | 0591 8c 
68 | 0592 68 memclr 33 2                   | clear EXT gates for SEND_DONE_ACK
21 | 0593 21 
02 | 0594 02 
7c | 0595 7c exec 156                      | goto u8 156
9c | 0596 9c 
7c | 0597 7c exec 159                      | goto u8 159
9f | 0598 9f 
c0 | 0599 c0 clken_c 1 50 160              | clock enable Awake_50000_160 50msec
01 | 0600 01 
32 | 0601 32 
a0 | 0602 a0 
01 | 0603 01 end                           | end
7c | 0604 7c exec 104                      | goto u8 104
68 | 0605 68 
68 | 0606 68 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 0607 08 
08 | 0608 08 
68 | 0609 68 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 0610 1e 
02 | 0611 02 
68 | 0612 68 memclr 33 4                   | clear EXT gates for SEND_DONE_ACK
21 | 0613 21 
04 | 0614 04 
7c | 0615 7c exec 100                      | goto u8 100
64 | 0616 64 
68 | 0617 68 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 0618 08 
08 | 0619 08 
68 | 0620 68 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 0621 1e 
02 | 0622 02 
68 | 0623 68 memclr 33 4                   | clear EXT gates for SEND_DONE_ACK
21 | 0624 21 
04 | 0625 04 
68 | 0626 68 memclr 43 2                   | clear EXT gates for Q_READY
2b | 0627 2b 
02 | 0628 02 
01 | 0629 01 end                           | end
a0 | 0630 a0 set_c u8 150 1                | msgRadio4_id = 1
96 | 0631 96 
01 | 0632 01 
1c | 0633 1c push_c 150                    | push &msgRadio4_id
96 | 0634 96 
55 | 0635 55 popx_u u16 175                | pop *msgRadio4
af | 0636 af 
1c | 0637 1c push_c 1                      | push 1
01 | 0638 01 
2c | 0639 2c pushx_vu u8 62                | push myHop:u8
3e | 0640 3e 
17 | 0641 17 neg                           | neg
04 | 0642 04 add                           | add
1c | 0643 1c push_c 2                      | push 2
02 | 0644 02 
0c | 0645 0c bxor                          | bxor
1d | 0646 1d push_c 1000                   | push 1000
03 | 0647 03 
e8 | 0648 e8 
1c | 0649 1c push_c 60                     | push 60
3c | 0650 3c 
06 | 0651 06 mult                          | mult
06 | 0652 06 mult                          | mult
55 | 0653 55 popx_u u16 177                | pop timeout
b1 | 0654 b1 
a0 | 0655 a0 set_c u8 179 0                | qtdnos = 0
b3 | 0656 b3 
00 | 0657 00 
a5 | 0658 a5 set_c u16 50 170              | await CUSTOM_A[0]
32 | 0659 32 
aa | 0660 aa 
01 | 0661 01 end                           | end
8c | 0662 8c outevtx_c 2 1 1               | emit LED0 len=1 const=1
02 | 0663 02 
01 | 0664 01 
01 | 0665 01 
68 | 0666 68 memclr 180 2                  | clear gates from addr 180 to addr 181
b4 | 0667 b4 
02 | 0668 02 
e0 | 0669 e0 tkins_max 0 173               | insert track ParAnd_sub_1_173
ad | 0670 ad 
e0 | 0671 e0 tkins_max 0 174               | insert track ParAnd_sub_2_174
ae | 0672 ae 
01 | 0673 01 end                           | end
94 | 0674 94 outevt_z 6                    | emit REQ_PHOTO
06 | 0675 06 
a5 | 0676 a5 set_c u16 26 180              | await PHOTO[0]
1a | 0677 1a 
b4 | 0678 b4 
01 | 0679 01 end                           | end
70 | 0680 70 getextdt_v 149 1              | get Ext Data lumus 1
95 | 0681 95 
01 | 0682 01 
a0 | 0683 a0 set_c u8 180 1                | open gate 1
b4 | 0684 b4 
01 | 0685 01 
7c | 0686 7c exec 175                      | goto u8 175
af | 0687 af 
8c | 0688 8c outevtx_c 3 1 0               | emit LED1 len=1 const=0
03 | 0689 03 
01 | 0690 01 
00 | 0691 00 
a5 | 0692 a5 set_c u16 59 0                | acumulador1 = 0
3b | 0693 3b 
00 | 0694 00 
a0 | 0695 a0 set_c u8 61 0                 | acumulador2 = 0
3d | 0696 3d 
00 | 0697 00 
e0 | 0698 e0 tkins_max 0 185               | insert track ParOr_sub_1_185
b9 | 0699 b9 
e0 | 0700 e0 tkins_max 0 186               | insert track ParOr_sub_2_186
ba | 0701 ba 
01 | 0702 01 end                           | end
a5 | 0703 a5 set_c u16 40 192              | await RECEIVE[1]
28 | 0704 28 
c0 | 0705 c0 
01 | 0706 01 end                           | end
6c | 0707 6c getextdt_p 175 25             | get Ext Data *msgRadio4 25
af | 0708 af 
19 | 0709 19 
2c | 0710 2c pushx_vu u8 56                | push lastReq:u8
38 | 0711 38 
2c | 0712 2c pushx_vu u8 150               | push msgRadio4_id:u8
96 | 0713 96 
0d | 0714 0d eq                            | eq
1c | 0715 1c push_c 1                      | push 1
01 | 0716 01 
2c | 0717 2c pushx_vu u8 155               | push msgRadio4_d8_1:u8
9b | 0718 9b 
0d | 0719 0d eq                            | eq
14 | 0720 14 land                          | land
80 | 0721 80 ifelse 204 205                | ifelse True_204 EndIf_205
cc | 0722 cc 
cd | 0723 cd 
8c | 0724 8c outevtx_c 3 1 1               | emit LED1 len=1 const=1
03 | 0725 03 
01 | 0726 01 
01 | 0727 01 
2d | 0728 2d pushx_vu u16 159              | push msgRadio4_d16_1:u16
9f | 0729 9f 
2d | 0730 2d pushx_vu u16 59               | push acumulador1:u16
3b | 0731 3b 
04 | 0732 04 add                           | add
55 | 0733 55 popx_u u16 59                 | pop acumulador1
3b | 0734 3b 
2c | 0735 2c pushx_vu u8 158               | push msgRadio4_d8_4:u8
9e | 0736 9e 
2c | 0737 2c pushx_vu u8 61                | push acumulador2:u8
3d | 0738 3d 
04 | 0739 04 add                           | add
54 | 0740 54 popx_u u8 61                  | pop acumulador2
3d | 0741 3d 
7c | 0742 7c exec 205                      | goto u8 205
cd | 0743 cd 
7c | 0744 7c exec 188                      | goto u8 188
bc | 0745 bc 
68 | 0746 68 memclr 38 2                   | clear EXT gates for RECEIVE
26 | 0747 26 
02 | 0748 02 
e0 | 0749 e0 tkins_max 0 187               | insert track ParOr_out_187
bb | 0750 bb 
01 | 0751 01 end                           | end
d1 | 0752 d1 clken_v 2 1 u16 177 207       | clock enable Awake_timeout_207 177ms
02 | 0753 02 
01 | 0754 01 
00 | 0755 00 
b1 | 0756 b1 
cf | 0757 cf 
01 | 0758 01 end                           | end
e0 | 0759 e0 tkins_max 0 187               | insert track ParOr_out_187
bb | 0760 bb 
01 | 0761 01 end                           | end
68 | 0762 68 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 0763 10 
08 | 0764 08 
68 | 0765 68 memclr 38 2                   | clear EXT gates for RECEIVE
26 | 0766 26 
02 | 0767 02 
a0 | 0768 a0 set_c u8 181 1                | open gate 2
b5 | 0769 b5 
01 | 0770 01 
7c | 0771 7c exec 175                      | goto u8 175
af | 0772 af 
78 | 0773 78 chkret 180                    | if (gate 0 == 0) PC=PC+1
b4 | 0774 b4 
01 | 0775 01 end                           | end
78 | 0776 78 chkret 181                    | if (gate 1 == 0) PC=PC+1
b5 | 0777 b5 
01 | 0778 01 end                           | end
a0 | 0779 a0 set_c u8 155 1                | msgRadio4_d8_1 = 1
9b | 0780 9b 
01 | 0781 01 
b0 | 0782 b0 set_v u8 150 56               | msgRadio4_id=lastReq
96 | 0783 96 
38 | 0784 38 
b4 | 0785 b4 set_v u16 151 54              | msgRadio4_source=nodeId
97 | 0786 97 
36 | 0787 36 
2c | 0788 2c pushx_vu u8 57                | push pai1:u8
39 | 0789 39 
55 | 0790 55 popx_u u16 153                | pop msgRadio4_target
99 | 0791 99 
a0 | 0792 a0 set_c u8 155 1                | msgRadio4_d8_1 = 1
9b | 0793 9b 
01 | 0794 01 
2c | 0795 2c pushx_vu u8 149               | push lumus:u8
95 | 0796 95 
2d | 0797 2d pushx_vu u16 59               | push acumulador1:u16
3b | 0798 3b 
04 | 0799 04 add                           | add
55 | 0800 55 popx_u u16 159                | pop msgRadio4_d16_1
9f | 0801 9f 
1c | 0802 1c push_c 1                      | push 1
01 | 0803 01 
2c | 0804 2c pushx_vu u8 61                | push acumulador2:u8
3d | 0805 3d 
04 | 0806 04 add                           | add
54 | 0807 54 popx_u u8 158                 | pop msgRadio4_d8_4
9e | 0808 9e 
90 | 0809 90 outevtx_v 19 25 _msgRadio4_t* 175  | emit Q_PUT len=25 var=msgRadio4
13 | 0810 13 
19 | 0811 19 
af | 0812 af 
8c | 0813 8c outevtx_c 4 1 3               | emit LED2 len=1 const=3
04 | 0814 04 
01 | 0815 01 
03 | 0816 03 
8c | 0817 8c outevtx_c 2 1 0               | emit LED0 len=1 const=0
02 | 0818 02 
01 | 0819 01 
00 | 0820 00 
7c | 0821 7c exec 167                      | goto u8 167
a7 | 0822 a7 
68 | 0823 68 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 0824 10 
08 | 0825 08 
68 | 0826 68 memclr 26 2                   | clear EXT gates for PHOTO
1a | 0827 1a 
02 | 0828 02 
68 | 0829 68 memclr 38 2                   | clear EXT gates for RECEIVE
26 | 0830 26 
02 | 0831 02 
68 | 0832 68 memclr 50 2                   | clear EXT gates for CUSTOM_A
32 | 0833 32 
02 | 0834 02 
01 | 0835 01 end                           | end
01 | 0836 01 end                           | end
68 | 0837 68 memclr 0 24                   | clear WClocks gates from 0 to 3
00 | 0838 00 
18 | 0839 18 
02 | 0840 02 return                        | return
01 | 0841 01 end                           | end
01 | 0842 01 L1(0x01) => 206 (0xce)
ce | 0843 ce 
93 | 0844 93 L147(0x93) => 561 (0x0231)
02 | 0845 02 
31 | 0846 31 
7a | 0847 7a L122(0x7a) => 499 (0x01f3)
01 | 0848 01 
f3 | 0849 f3 
03 | 0850 03 L3(0x03) => 837 (0x0345)
03 | 0851 03 
45 | 0852 45 
5b | 0853 5b L91(0x5b) => 432 (0x01b0)
01 | 0854 01 
b0 | 0855 b0 
36 | 0856 36 L54(0x36) => 434 (0x01b2)
01 | 0857 01 
b2 | 0858 b2 
a9 | 0859 a9 L169(0xa9) => 823 (0x0337)
03 | 0860 03 
37 | 0861 37 
af | 0862 af L175(0xaf) => 773 (0x0305)
03 | 0863 03 
05 | 0864 05 
5c | 0865 5c L92(0x5c) => 264 (0x0108)
01 | 0866 01 
08 | 0867 08 
86 | 0868 86 L134(0x86) => 521 (0x0209)
02 | 0869 02 
09 | 0870 09 
7c | 0871 7c L124(0x7c) => 538 (0x021a)
02 | 0872 02 
1a | 0873 1a 
98 | 0874 98 L152(0x98) => 575 (0x023f)
02 | 0875 02 
3f | 0876 3f 
5d | 0877 5d L93(0x5d) => 332 (0x014c)
01 | 0878 01 
4c | 0879 4c 
0e | 0880 0e L14(0x0e) => 256 (0x0100)
01 | 0881 01 
00 | 0882 00 
10 | 0883 10 L16(0x10) => 630 (0x0276)
02 | 0884 02 
76 | 0885 76 
9a | 0886 9a L154(0x9a) => 590 (0x024e)
02 | 0887 02 
4e | 0888 4e 
5e | 0889 5e L94(0x5e) => 439 (0x01b7)
01 | 0890 01 
b7 | 0891 b7 
9b | 0892 9b L155(0x9b) => 549 (0x0225)
02 | 0893 02 
25 | 0894 25 
bb | 0895 bb L187(0xbb) => 762 (0x02fa)
02 | 0896 02 
fa | 0897 fa 
9c | 0898 9c L156(0x9c) => 597 (0x0255)
02 | 0899 02 
55 | 0900 55 
30 | 0901 30 L48(0x30) => 325 (0x0145)
01 | 0902 01 
45 | 0903 45 
38 | 0904 38 L56(0x38) => 343 (0x0157)
01 | 0905 01 
57 | 0906 57 
ba | 0907 ba L186(0xba) => 752 (0x02f0)
02 | 0908 02 
f0 | 0909 f0 
9e | 0910 9e L158(0x9e) => 496 (0x01f0)
01 | 0911 01 
f0 | 0912 f0 
be | 0913 be L190(0xbe) => 746 (0x02ea)
02 | 0914 02 
ea | 0915 ea 
70 | 0916 70 L112(0x70) => 473 (0x01d9)
01 | 0917 01 
d9 | 0918 d9 
cd | 0919 cd L205(0xcd) => 744 (0x02e8)
02 | 0920 02 
e8 | 0921 e8 
a0 | 0922 a0 L160(0xa0) => 604 (0x025c)
02 | 0923 02 
5c | 0924 5c 
81 | 0925 81 L129(0x81) => 507 (0x01fb)
01 | 0926 01 
fb | 0927 fb 
cc | 0928 cc L204(0xcc) => 724 (0x02d4)
02 | 0929 02 
d4 | 0930 d4 
42 | 0931 42 L66(0x42) => 383 (0x017f)
01 | 0932 01 
7f | 0933 7f 
c0 | 0934 c0 L192(0xc0) => 707 (0x02c3)
02 | 0935 02 
c3 | 0936 c3 
bc | 0937 bc L188(0xbc) => 703 (0x02bf)
02 | 0938 02 
bf | 0939 bf 
1d | 0940 1d L29(0x1d) => 284 (0x011c)
01 | 0941 01 
1c | 0942 1c 
43 | 0943 43 L67(0x43) => 389 (0x0185)
01 | 0944 01 
85 | 0945 85 
b9 | 0946 b9 L185(0xb9) => 703 (0x02bf)
02 | 0947 02 
bf | 0948 bf 
ae | 0949 ae L174(0xae) => 688 (0x02b0)
02 | 0950 02 
b0 | 0951 b0 
b4 | 0952 b4 L180(0xb4) => 680 (0x02a8)
02 | 0953 02 
a8 | 0954 a8 
44 | 0955 44 L68(0x44) => 362 (0x016a)
01 | 0956 01 
6a | 0957 6a 
88 | 0958 88 L136(0x88) => 536 (0x0218)
02 | 0959 02 
18 | 0960 18 
64 | 0961 64 L100(0x64) => 451 (0x01c3)
01 | 0962 01 
c3 | 0963 c3 
a7 | 0964 a7 L167(0xa7) => 658 (0x0292)
02 | 0965 02 
92 | 0966 92 
45 | 0967 45 L69(0x45) => 375 (0x0177)
01 | 0968 01 
77 | 0969 77 
6a | 0970 6a L106(0x6a) => 606 (0x025e)
02 | 0971 02 
5e | 0972 5e 
9f | 0973 9f L159(0x9f) => 599 (0x0257)
02 | 0974 02 
57 | 0975 57 
0f | 0976 0f L15(0x0f) => 440 (0x01b8)
01 | 0977 01 
b8 | 0978 b8 
46 | 0979 46 L70(0x46) => 391 (0x0187)
01 | 0980 01 
87 | 0981 87 
aa | 0982 aa L170(0xaa) => 662 (0x0296)
02 | 0983 02 
96 | 0984 96 
66 | 0985 66 L102(0x66) => 617 (0x0269)
02 | 0986 02 
69 | 0987 69 
87 | 0988 87 L135(0x87) => 527 (0x020f)
02 | 0989 02 
0f | 0990 0f 
8c | 0991 8c L140(0x8c) => 553 (0x0229)
02 | 0992 02 
29 | 0993 29 
99 | 0994 99 L153(0x99) => 581 (0x0245)
02 | 0995 02 
45 | 0996 45 
34 | 0997 34 L52(0x34) => 339 (0x0153)
01 | 0998 01 
53 | 0999 53 
ad | 1000 ad L173(0xad) => 674 (0x02a2)
02 | 1001 02 
a2 | 1002 a2 
8e | 1003 8e L142(0x8e) => 592 (0x0250)
02 | 1004 02 
50 | 1005 50 
58 | 1006 58 L88(0x58) => 411 (0x019b)
01 | 1007 01 
9b | 1008 9b 
68 | 1009 68 L104(0x68) => 455 (0x01c7)
01 | 1010 01 
c7 | 1011 c7 
78 | 1012 78 L120(0x78) => 494 (0x01ee)
01 | 1013 01 
ee | 1014 ee 
cf | 1015 cf L207(0xcf) => 759 (0x02f7)
02 | 1016 02 
f7 | 1017 f7 
59 | 1018 59 L89(0x59) => 430 (0x01ae)
01 | 1019 01 
ae | 1020 ae 
1f | 1021 1f L31(0x1f) => 327 (0x0147)
01 | 1022 01 
47 | 1023 47 
67 | 1024 67 L103(0x67) => 455 (0x01c7)
01 | 1025 01 
c7 | 1026 c7 
6f | 1027 6f L111(0x6f) => 467 (0x01d3)
01 | 1028 01 
d3 | 1029 d3 
5a | 1030 5a L90(0x5a) => 354 (0x0162)
01 | 1031 01 
62 | 1032 62 
9d | 1033 9d L157(0x9d) => 486 (0x01e6)
01 | 1034 01 
e6 | 1035 e6 
